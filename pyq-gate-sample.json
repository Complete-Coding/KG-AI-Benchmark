{
  "generatedAt": "2025-10-18T13:45:16.286Z",
  "total": 100,
  "stats": {
    "countsByType": {
      "MCQ": 53,
      "MSQ": 24,
      "NAT": 22,
      "TRUE_FALSE": 1,
      "FILL_BLANK": 0
    }
  },
  "questions": [
    {
      "questionId": 533,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "GATE",
        "topic": "Set theory",
        "subtopic": null
      },
      "content": {
        "questionText": "The power set of {ϕ} is",
        "options": [
          {
            "id": 0,
            "text": "{ϕ}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{ϕ,{ϕ}}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{0, ϕ, {ϕ}}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of These",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(b) The set {ϕ} is singleton set, it contains one element which is ϕ. So, it’s power set must contain 2 elements only. ϕ is a member of every power set and the other member is the element itself. So, {ϕ, {ϕ}} is correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 540,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "GATE",
        "topic": "Set theory",
        "subtopic": null
      },
      "content": {
        "questionText": "A binary string is defined as sequence of 0’s and 1’s. The set of all possible finite binary strings is equivalent to which of the following?",
        "options": [
          {
            "id": 0,
            "text": "R",
            "feedback": null
          },
          {
            "id": 1,
            "text": "N",
            "feedback": null
          },
          {
            "id": 2,
            "text": "C",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Q",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(b) (d) Set of binary strings is enumerable. That is, like rational number set we can arrange them in order and hence count. So, this set is countable infinite. As we know that, set N and set Q are countably infinite while R and C are uncountable, hence answer are these two.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 542,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider 3 sets A,B and C Now consider the following statements:\nS1: if (A U C = B U C) → (A = B)\nS2: if (A ⋂ C = B ⋂ C) → (A = B)\nWhich of the following is/are true:",
        "options": [
          {
            "id": 0,
            "text": "Only S1",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Both S1 and S2",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Only S2",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of the above",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "counter example for S1 : A={1,2,3,4}, B= {1,2} and C={1,3,4}\ncounter example for S2 : A={1,2,3,4}, B= {1,3,5,6} and C={1,3}",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 548,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let x be the number of relations over a set with 50! elements which are both symmetric and asymmetric the value of x = _________        (NAT)",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 1,
          "max": 1,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "symmetric relation allow reflexive pairs but asymmetric can’t allow symmetric pairs so only relation Ф is allowed under symmetric and asymmetric both",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 551,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a sequence of n sets defined as follows: B1 ⊆ B2 ⊆ B3 ⊆ … ⊆ Bn. The cardinality of the set Bn is n. What is the maximum value of |B1| + |B2| + … + |Bn|?",
        "options": [
          {
            "id": 0,
            "text": "n",
            "feedback": null
          },
          {
            "id": 1,
            "text": "n2",
            "feedback": null
          },
          {
            "id": 2,
            "text": "n(n+1)/2",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "If the sets B1,B2,...,Bn are not strictly contained within one another (i.e., they can be equal), then indeed each set can potentially contain all elements. Here's why n^2 makes sense: Each set can contain up to n elements. Since we are summing the cardinalities and each of the n sets can have up to n elements, we get n×n=n^2. Thus, if the sets can be equal and each set contains the maximum n elements, the total sum is n^2.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 558,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "The number of elements in the power set of A={ϕ, {ϕ}, a, (c,d), 1} is (MCQ)",
        "options": [
          {
            "id": 0,
            "text": "64",
            "feedback": null
          },
          {
            "id": 1,
            "text": "32",
            "feedback": null
          },
          {
            "id": 2,
            "text": "16",
            "feedback": null
          },
          {
            "id": 3,
            "text": "A is NOT a set",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": null,
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 563,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "The power set of {ϕ} is (MCQ)",
        "options": [
          {
            "id": 0,
            "text": "{ϕ}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{ϕ,{ϕ}}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{0, ϕ, {ϕ}}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of These",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": null,
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 571,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "If two sets A and B are having 9 elements in common then, the number of elements common to each of the sets A×B and B×A are (NAT)",
        "options": []
      },
      "answer": {
        "range": {
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": null,
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 578,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "If A={1, 2, 3, 4} then the number of possible equivalence relations on A is? _____",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 15,
          "max": 15,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(15) A has to be divided into quotient partition set. There can be 4 partitions. 1 block partition -> 1 way 2 block partition -> 4!/1!3!+4!/2!2!2!=7 ways 3 block partition -> 6 ways 4 block partition -> 1 way Total 15 ways possible.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 588,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following are true?",
        "options": [
          {
            "id": 0,
            "text": "Anti-Symmetric and Irreflexive relation implies Asymmetric relation",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Asymmetric relation implies Anti-symmetric and Irreflexive relation",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Anti-symmetric relation implies Asymmetric",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Asymmetric relation implies Anti-symmetric",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [
          0,
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) (b) (d) If we think with matrix representation of relation, Anti symmetric represents having the diagonal elements only and being irreflexive means not even diagonal elements. So, it is asymmetric. On the other hand, same is applicable reversely. So, it is biconditional statement. Asymmetric↔Antisymmetric and Irreflexive While, Asymmetric implies antisymmetric but the converse is not true. Asymmetric →Antisymmetric",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 620,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let f:A→B and g:B→C denote two functions. If the function g∘f:A→C is a surjection and g is an injection then function f is,",
        "options": [
          {
            "id": 0,
            "text": "Injection",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Surjection",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Bijection",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(b) g is a surjection, so for all elements in B there exists unique image in C g∘f is surjection. So, g(f(a))=C So, the image set of f is also equal to B. Hence, f is a surjection.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 641,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Number of cycles of length 4 that are possible in the complete bipartite graph k4,6 is ____.",
        "options": []
      },
      "answer": {
        "range": {
          "min": 90,
          "max": 90,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "(90) The bipartite graph divides the vertices into two groups. The first group contains 4 vertices and second group contains6 vertices. To form a cycle of length 4, we can choose any two vertices in the first group and any two vertices in the second group.So, the required number of cycles, C(4,2)*C(6,2)=6*15=90",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 642,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a finite connected planar graph with n vertices with all of degree 4 and 10 regions. Find the number of vertices in the graph.",
        "options": []
      },
      "answer": {
        "range": {
          "min": 8,
          "max": 8,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Answer is 8 Step 1: Recall Euler's FormulaFor a connected planar graph, Euler's formula states: n−e+r=2, where-> n = number of vertices,-> e = number of edges,-> r = number of regions (including the outer region). Step 2: Use the Given Information-> The graph is connected and planar.-> All vertices have degree 4.-> The number of regions r=10r=10. Step 3: Relate Vertices and Edges-> In any graph, the sum of the degrees of all vertices is equal to twice the number of edges (Handshaking Lemma): ∑degrees=2e. -> Since all vertices have degree 4: 4n=2e ⟹ e=2n. Step 4: Substitute into Euler's FormulaSubstitute e=2ne=2n and r=10r=10 into Euler's formula: => n−e+r=2,=> n−2n+10=2,=> −n+10=2,=> −n=−8,=> n=8. Step 5: Verify the Solution Number of vertices n=8n=8. Number of edges e=2n=16e=2n=16. Number of regions r=10r=10. Substituting into Euler's formula: 8−16+10=2, which is correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 650,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the statements and choose the correct ones.",
        "options": [
          {
            "id": 0,
            "text": "Any two simple connected graphs with n vertices, where all vertices have degree two, are isomorphic",
            "feedback": null
          },
          {
            "id": 1,
            "text": "The maximum vertex connectivity possible is 2e/n",
            "feedback": null
          },
          {
            "id": 2,
            "text": "If G is a simple graph that has a Hamiltonian circuit, then deg u +deg v ≥n for every pair of vertices for n≥3",
            "feedback": null
          },
          {
            "id": 3,
            "text": "In a complete graph with n vertices, there can be up to (n-1)!/2 Hamiltonian circuits",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) (b) (d)  For (a), eventually it will be cycle graph and all such graphs with n vertices will be isomorphic.  For (b), it is true that the maximum vertex connectivity possible is 2en  For (c), from Ore’s theorem, If G is a simple graph that has a n vertices where n≥3, and deg u +deg v ≥n for every pair of vertices then it has Hamiltonian cycle. So, (c) is wrong.  For (d), A Hamiltonian circuit is a closed loop on a graph that visits every vertex once and only once. A complete graph is a simple undirected graph in which every pair of distinct vertices is connected by a unique edge.  The formula (n-1)!/2 is used to calculate the number of different Hamiltonian circuits in a complete graph with n vertices The formula (n-1)!/2 is used to calculate the number of different Hamiltonian circuits in a complete graph with n vertices",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 662,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is not a subgroup of (z,+)? [Assume O and E denote the set of odd integers and even integers respectively]",
        "options": [
          {
            "id": 0,
            "text": "(O,+)",
            "feedback": null
          },
          {
            "id": 1,
            "text": "(E,+)",
            "feedback": null
          },
          {
            "id": 2,
            "text": "({3k | k∈Z},+)",
            "feedback": null
          },
          {
            "id": 3,
            "text": "(-4k | k∈Z,+)",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) It is not closed under set of odd integers as odd+odd=even. Hence, it is not a group.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 677,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "H and K be two subgroups of group G. If |HK| = 12 and |H ∩ K| = 6, then which of the following can be the order of H?",
        "options": [
          {
            "id": 0,
            "text": "1",
            "feedback": null
          },
          {
            "id": 1,
            "text": "3",
            "feedback": null
          },
          {
            "id": 2,
            "text": "8",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(d) We know that, H∩K is a subgroup of H. Now, by Lagrange’s theorem, subgroup order must divide O(H). But, none of the given options divide order of H.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 680,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following statements are correct?",
        "options": [
          {
            "id": 0,
            "text": "The union of any two subgroups of a group G is also a subgroup of G",
            "feedback": null
          },
          {
            "id": 1,
            "text": "The intersection of any two subgroups of a group G is also subgroup of G",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The union of every subgroup of a group (G,*) is also a subgroup of G",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Every subgroup of an abelian group is also an abelian group",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(b) (d) The union of two subgroups of a group G is also a subgroup G. Consider group G = {1,3,5,7} w.r.t. multiplicative(8) H1={1,3} H2={1,3,5} H1∪H2={1,3,5} This is not a subgroup of G. As 3*5 mod 8=7 which is not in H1∪H2.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 682,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following options are true if G is a finite group of 35 elements?",
        "options": [
          {
            "id": 0,
            "text": "The size of the smallest proper subgroup of G is1.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "The total number of subgroups of G will be equal to 16.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The size of  the largest possible proper subgroup of G is 7.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "The size of the smallest subgroup of G is 5.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "According to Lagrange’s theorem, the order of subgroup of G divides the order of G. Therefore, the sizes of subgroups are 1, 5, 7, 35. The order 1 and 35 are of trivial subgroups. Hence, the size of the argest possible proper subgroup of G is 7. Thus, the correct option is (c).",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 685,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is false about Cyclic Groups",
        "options": [
          {
            "id": 0,
            "text": "If order of a Cyclic Group (G, *) is 15, then the number of generators are 9",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Every subgroup of a Cyclic Group is Cyclic",
            "feedback": null
          },
          {
            "id": 2,
            "text": "A cyclic group of order N has a unique subgroup of every divisor of N",
            "feedback": null
          },
          {
            "id": 3,
            "text": "If an element a is generator in a Cyclic Group, then a⁻¹ is not a generator",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(A) If n is order of cyclic group then the number of generators possible is equal to prime numbers till n. 15 = 5 x 3 Number of primes = 4 × 2 = 8   .. False (B) Every subgroup of a Cyclic Group is cyclic but the generators need not be same… True (C) The statement is true based on property……True (D) In a cyclic group, if a is a generator, then a−1 is also a generator, as both generate the same set of elements... False",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 709,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following pairs of propositions are not logically equivalent?",
        "options": [
          {
            "id": 0,
            "text": "p∧q→r and ~r→(~p∨~q)",
            "feedback": null
          },
          {
            "id": 1,
            "text": "p↔q and ~p↔~q",
            "feedback": null
          },
          {
            "id": 2,
            "text": "(p→q)⋀(q→p) and p↔q",
            "feedback": null
          },
          {
            "id": 3,
            "text": "p→r∧q→r and p∨q→r",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(d) The first proposition, p→r ∧ q→r, is interpreted as p→(r∧q)→r due to operator precedence (∧ has higher precedence than →) and right associativity of →. \n\nSimplifying p→(r∧q)→r: \n=> ¬p∨(¬(r∧q)∨r)\n=> ¬p∨(¬r∨¬q∨r)\n=> ¬p∨True\n=> True\n\nThis is a tautology (always true). \n\nThe second proposition, p∨q→r, is not a tautology. It simplifies to: \n=> ¬(p∨q)∨r\n=> (¬p∧¬q)∨r \n\nThis is not always true; it depends on the truth values of p, q, and r.\nSince the first proposition is a tautology and the second is not, Option D is not logically equivalent.  Similarly, we can prove that rest of the propositions are equivalent.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 711,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following statement(s) is/are tautology?",
        "options": [
          {
            "id": 0,
            "text": "p⋁~p",
            "feedback": null
          },
          {
            "id": 1,
            "text": "p⋀q→p",
            "feedback": null
          },
          {
            "id": 2,
            "text": "p→q⋁p",
            "feedback": null
          },
          {
            "id": 3,
            "text": "p⋁q→p",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) (b) (c) (p⋁~p)≡p+p'≡1 p⋀q→ppq'+p≡p'+q'+p≡1 p→q⋁p≡p'+q+p≡1 p⋁q→p p+q'+p≡p'q'+p≡p+q'",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 736,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is/are correct",
        "options": [
          {
            "id": 0,
            "text": "Every 2-chromatic graph is bipartite graph",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Cycle graph of n vertices is ⌈n/2⌉ chromatic",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Every tree with two or more vertices is 2-chromatic",
            "feedback": null
          },
          {
            "id": 3,
            "text": "For colouring any planar graph at maximum we need 5 colours(5-chromatic)",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Correct Statements: \n\nA. Every 2-chromatic graph is bipartite graph \nC. Every tree with two or more vertices is 2-chromatic \n\nIncorrect Statements: \n\nB. Cycle graph of n vertices is ⌈n/2⌉ chromatic \nD. For coloring any planar graph at maximum, we need 5 colors (5-chromatic) \n\nTherefore, the correct answers are: \nA and C",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 743,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following algebraic structure form a group? A: The set of integers under Subtraction B: The set of irrational numbers under multiplication C: The set of real numbers under subtraction D: The set of real number under multiplication How many statements are true _________",
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "A: The set of integers under Subtraction\n1.) Closure: Subtraction of two integers is an integer. Satisfied.\n2.) Associativity: Subtraction is not associative. For example, (a−b)−c≠a−(b−c)(a−b)−c=a−(b−c). Not satisfied.\n3.) Identity Element: There is no identity element ee such that a−e=aa−e=a for all aa. Not satisfied.\n4.) Inverse Element: Not applicable since there is no identity element.\nConclusion: This structure is not a group. \nB: The set of irrational numbers under Multiplication\n1.) Closure: The product of two irrational numbers is not always irrational. For example, 2×2=2, which is rational. Not satisfied.\n2.) Associativity: Multiplication is associative. Satisfied.\n3.) Identity Element: The identity element for multiplication is 1, but 1 is not irrational. Not satisfied.\n4.) Inverse Element: Not applicable since there is no identity element.\nConclusion: This structure is not a group. \nC: The set of real numbers under Subtraction\n1.) Closure: Subtraction of two real numbers is a real number. Satisfied.\n2.) Associativity: Subtraction is not associative. For example, (a−b)−c≠a−(b−c)(a−b)−c=a−(b−c). Not satisfied.\n3.) Identity Element: There is no identity element ee such that a−e=aa−e=a for all aa. Not satisfied.\n4.) Inverse Element: Not applicable since there is no identity element.\nConclusion: This structure is not a group. \nD: The set of real numbers under Multiplication\n1.) Closure: Multiplication of two real numbers is a real number. Satisfied.\n2.) Associativity: Multiplication is associative. Satisfied.\n3.) Identity Element: The identity element is 1, since a×1=aa×1=a for all aa. Satisfied.\n4.) Inverse Element: Every non-zero real number aa has an inverse 1aa1​. However, 0 does not have an inverse. Not satisfied.\nConclusion: This structure is not a group because 0 does not have an inverse. \nStep 5: Final Answer\nNone of the given algebraic structures form a group. Thus, the number of true statements is: 0",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 747,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let P = {x,y,z} and let R = {(x,x) , (y,y), (z,z),(x,y)(y,x), (y,z) } be a relation on P then which of the following is incorrect?",
        "options": [
          {
            "id": 0,
            "text": "R is not reflexive relation",
            "feedback": null
          },
          {
            "id": 1,
            "text": "R is not symmetric relation",
            "feedback": null
          },
          {
            "id": 2,
            "text": "R is a transitive relation.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "R is equivalence relation",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(A, C, D) Step 1: Check if R is Reflexive\n--> A relation is reflexive if (a,a)∈Rfor all a∈P.\n--> Here, (x,x), (y,y), and (z,z) are all in R.\nConclusion: R is reflexive. \n\nStep 2: Check if R is Symmetric\n--> A relation is symmetric if (a,b)∈R(a,b)∈R implies (b,a)∈R(b,a)∈R.\nHere:\n    -> (x,y)∈R and (y,x)∈R: Symmetric.\n    -> (y,z)∈R but (z,y)∈/R: Not symmetric.\nConclusion: R is not symmetric. \n\nStep 3: Check if R is Transitive\n--> A relation is transitive if (a,b)∈R and (b,c)∈R imply (a,c)∈R.\nHere:\n    (x,y)∈R and (y,z)∈R, but (x,z)∈/R: Not transitive.\nConclusion: R is not transitive. \n\nStep 4: Check if R is an Equivalence Relation\nA relation is an equivalence relation if it is reflexive, symmetric, and transitive.\nSince R is not symmetric and not transitive, it cannot be an equivalence relation.\nConclusion: R is not an equivalence relation. \n\nStep 5: Evaluate the Statements\nA. R is not reflexive relation:\n--> This is incorrect because R is reflexive. \nB. R is not symmetric relation:\n--> This is correct because R is not symmetric. \nC. R is a transitive relation:\n--> This is incorrect because R is not transitive. \nD. R is equivalence relation:\n--> This is incorrect because R is not an equivalence relation.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 748,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following statements:",
        "options": [
          {
            "id": 0,
            "text": "For union, the attribute names in both relations must be the same.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "For union, the attribute names may differ, but the number of attributes must match.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "For intersection, the number of attributes must match, and domain types must align position-wise.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "For intersection, the attribute names and number of attributes may differ.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Union (R ∪ S) and Intersection (R ∩ S) require:Same number of attributes (columns).Compatible domain types (data types must match position-wise).Attribute names do NOT need to match (operations are position-based, not name-based).Why B and C are correct:B: Names may differ, but attribute count must match (fully accurate).C: Intersection requires matching attribute counts and domain types (correct).Why A and D are wrong:A: Names do not need to match (incorrect strictness).D: The number of attributes must match (incorrect flexibility).",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 752,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "A = {1,2,3,4,5,6,10,12,15,20,30,60}, where a*b = LCM (a,b). Then A is a?",
        "options": [
          {
            "id": 0,
            "text": "Semi Group",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Monoid",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Group",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Abelian Group",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "-> Step 1: Check for Closure\n-> The Least Common Multiple (LCM) of any two elements in A must also be in A.\n-> Since A contains all divisors of 60, and the LCM of any two divisors of 60 is also a divisor of 60, the set A is closed under the operation ∗. \n\nStep 2: Check for Associativity\n-> The LCM operation is associative, meaning: \n        LCM(a,LCM(b,c)) = LCM(LCM(a,b),c).\n-> Thus, the operation ∗ is associative. \n\nStep 3: Check for Identity Element\n--> An identity element ee satisfies a∗e=a for all a∈A.\n--> For the LCM operation, the identity element is 1, because: LCM(a,1)=afor all a∈A.\nThus, 1 is the identity element. \n\nStep 4: Check for Inverses\nAn inverse of an element a is an element b such that: a∗b=LCM(a,b)=e=1.\nThe only element in A that satisfies LCM(a,b)=1 is a=1, because: LCM(1,1)=1.\nFor all other elements a≠1, there is no b∈A such that LCM(a,b)=1.\nThus, only the element 1 has an inverse. \n\nStep 5: Determine the Algebraic Structure\nThe set A with the operation ∗ satisfies:\n--> Closure,\n--> Associativity,\n--> Identity element (1),\n--> Inverses only for the identity element. \nThis structure is a monoid, which is a semigroup with an identity element.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 763,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a relation xRy between times of day such that x and y are at most twenty minutes part. Then which of the following are true?",
        "options": [
          {
            "id": 0,
            "text": "Reflexive",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Transitive",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Irreflexive",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Symmetric",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) (d) Between the same time, difference is 0<20, so it is reflexive. Also, if 10 am and 10:20 am are 20 minutes apart then 10:20 am and 10 am are also 20 minutes apart. So it is symmetric. But it is not transitive which can be easily interpreted with examples 10 am, 10:20 am and 10:40 am.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 783,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Define a group (A,*) as follows, A = {0,1,2,3,4………19} Assume (a*b) = (a*b)mod20 The number of non trivial subgroups of A, having cardinality greater than 1 will be:",
        "options": [
          {
            "id": 0,
            "text": "2",
            "feedback": null
          },
          {
            "id": 1,
            "text": "3",
            "feedback": null
          },
          {
            "id": 2,
            "text": "4",
            "feedback": null
          },
          {
            "id": 3,
            "text": "5",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "22 * 51 = 20 so (2+1)*(1+1)-2 = 4 First broke the order of group in prime factors now add 1 in all powers and multiply them. Now subtract 2 from it because 2 trivial subgroups.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 820,
      "type": "TRUE_FALSE",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "If A =(1,2,3} (MCQ) Then Φ ⊆ A",
        "options": []
      },
      "answer": {
        "correct": true
      },
      "solution": "Φ is subset of any set hence true",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 824,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "DML is provided for",
        "options": [
          {
            "id": 0,
            "text": "Description of logical structure of database",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Addition of new structures in the database system",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Manipulation & processing of database",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Definition of physical structure of database system",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "DML is provided for manipulation & processing of database. (Data stored in the database is processed or manipulated using data manipulation language commands as its name)",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 826,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following operations are supported by SQL?",
        "options": [
          {
            "id": 0,
            "text": "INSERT",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT",
            "feedback": null
          },
          {
            "id": 2,
            "text": "UPDATE",
            "feedback": null
          },
          {
            "id": 3,
            "text": "MERGE",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(A) True: The INSERT statement is used to add new rows to a table in a relational database. (B) True: The SELECT statement is used to query and retrieve data from one or more tables. (C) True: The UPDATE statement is used to modify existing rows in a table. (D) True: The MERGE statement is used to perform insert, update, or delete operations on a target table based on the result of a join with a source table. This statement is often referred to as \"upsert\" functionality, combining insert and update operations.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 828,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "In relational database management systems, which of the following statements are true?",
        "options": [
          {
            "id": 0,
            "text": "A relation (table) must have a unique primary key.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "A foreign key can reference attributes in another table.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The domain of an attribute is the set of possible values it can take.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "A candidate key can include additional non-key attributes to ensure uniqueness.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(A) True: Every table must have a unique primary key. (B) True: Foreign keys reference primary keys or unique keys in other tables. (C) True: The domain defines the range of permissible values for an attribute. (D) False: A candidate key is a minimal set of attributes that uniquely identifies a tuple; it cannot include additional non-key attributes.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 831,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "A table Products has a composite primary key consisting of two columns: Product_ID and Category_ID. If Product_ID has 1,000 unique values and Category_ID has 10 unique values, how many unique combinations of Product_ID and Category_ID can exist in the table?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 10000,
          "max": 10000,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "The number of unique combinations = Number of unique values for Product_ID * Number of unique values for Category_ID Number of unique combinations=1,000×10=10,000",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 835,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following are valid properties of transactions in the context of the ACID properties?",
        "options": [
          {
            "id": 0,
            "text": "Atomicity ensures that either all operations of a transaction are executed or none are.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Consistency guarantees that the database transitions from one valid state to another.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Isolation ensures that the operations of a transaction are visible to other transactions immediately.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Durability ensures that once a transaction is committed, its changes are permanent.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [
          0,
          1
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A. True: Atomicity means that a transaction is all-or-nothing. B. True: Consistency ensures database integrity is maintained. C. False: Isolation means that the operations are not visible to other transactions until the transaction is complete. D. True: Durability means committed changes are permanent and survive crashes.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 864,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following statements and choose true or false. S1: Participation of the weak entity set in identifying relationship must be total. S2: Multivalued attributes in ER diagram require separate tables when converted into relational model which satisfy 2NF.",
        "options": [
          {
            "id": 0,
            "text": "F, T",
            "feedback": null
          },
          {
            "id": 1,
            "text": "T, F",
            "feedback": null
          },
          {
            "id": 2,
            "text": "F, F",
            "feedback": null
          },
          {
            "id": 3,
            "text": "T, T",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(d) S1: Participation of the weak entity set in identifying relationship should be total because primary key of weak entity set gets defined only by relating it to strong entity and its primary key value. S2: Multivalued attributes in ER diagram require separate tables along with key attributes when converted into relational model.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 866,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is/are true?",
        "options": [
          {
            "id": 0,
            "text": "Dashed ellipses are used to denote derived attribute",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Double rectangles are used to denote weak entity sets",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Double ellipses are used to denote multivalued attribute",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Double diamond are used to denote weak relationships",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) (b) (c) (d) Dashed ellipses are used to denote the derived attribute. Double rectangles are used to denote weak entity sets. Double ellipses are used to denote multivalued attribute. Double diamond are used to denote weak relationships.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 887,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "How many maximum superkeys possible if R(A1,A2,…,A10) has 10 attributes?",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 1023,
          "max": 1023,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(1023) The maximum number of superkeys are possible when all the attributes are candidate key. For n candidate keys, 2n-1 superkeys are possible. Here, n=10, hence 1023 superkeys are there.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 891,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relation R(P, Q, X, Y, Z) and functional dependencies F that hold over this relation. P, Q, Y → X Q, X → Y X, Y → Z In which normal form is relation R? (Recall that a relation can be in multiple normal forms)",
        "options": [
          {
            "id": 0,
            "text": "2NF",
            "feedback": null
          },
          {
            "id": 1,
            "text": "1NF",
            "feedback": null
          },
          {
            "id": 2,
            "text": "3NF",
            "feedback": null
          },
          {
            "id": 3,
            "text": "BCNF",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Candidate Keys: PQX\nPQY\nFD in question: XY → Z XY is not a subset of any one candidate key.\nNot subset of PQX\nNot subset of PQY\n→ So this is NOT a partial dependency. Then what is it?This is a transitive dependency, not partial. Why? Let’s derive it step by step: PQY → X (given)\nQX → Y (given)\nXY → Z (given)\nUsing QX → Y and XY → Z\n→ You get: QX → Z But QX is not a candidate key.\n→ So a non-superkey is determining a non-prime attribute (Z)\n→ Hence, violates 3NF via transitive dependency, not partial. Final clarification:Not a partial dependency (since XY not subset of any one CK)\nIs a transitive dependency (non-key → non-prime)\nHence: 3NF violated, still in 2NF",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 894,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following statements:        1. All attributes of a relation together form a super key.\n2. Every candidate key is also a super key.\n3. A prime attribute of a relation scheme R is an attribute that appears in all the candidates key of R.\n4. Every super key is also a candidate key.\nThe number of above statements which are correct is ?",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 2,
          "max": 2,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "1. true. The set of all attributes in a relation will always uniquely identify any tuple because it includes all information in the tuple.\n\n2. true. A candidate key is a minimal super key, meaning it has no unnecessary attributes but still uniquely identifies tuples.\n\n3. false. The correct term is it should appears in any of the candidate keys\n\n4.  false. A candidate key is a minimal super key, meaning it has no extraneous attributes.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 895,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a relation R with 6 attributes. Then the maximum possible number of candidate keys are ?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 20,
          "max": 20,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Direct Method: Max number of candidate keys = nCn/2\nSo here, C( 6,3 ) = 20. Detailed Method:🟩 Given:Relation R(A, B, C, D, E, F) → 6 attributes\nWe want to find maximum possible candidate keys. Let’s assume: There are no functional dependencies.\nSo, no attribute depends on any other → all combinations that uniquely identify rows can be candidate keys.\n🟦 What makes a combination a candidate key?It should uniquely identify a row.\nNo subset of it should do the same (i.e., it should be minimal).\n✅ Try combinations:Start checking combinations of attributes that might uniquely identify rows. Step 1: Try combinations of 1 or 2 attributes With no FD, 1 or 2 attributes can’t uniquely identify a row (too little data). So, not candidate keys.\nStep 2: Try combinations of 3 attributes\nLet’s write down all such unique 3-attribute combinations: ABC\nABD\nABE\nABF\nACD\nACE\nACF\nADE\nADF\nAEF\nBCD\nBCE\nBCF\nBDE\nBDF\nBEF\nCDE\nCDF\nCEF\nDEF\n🎯 These are 20 combinations. Each of these: Has 3 unique attributes.\nCan potentially act as candidate keys because nothing in them depends on anything else.\nSo, 20 is the max. 🔁 Why not 4 or more?Because: If a 3-attribute combo works, then adding a 4th attribute makes it not minimal.\nSo only the 3-sized combos are valid candidate keys.\n🎉 Final answer = 20 candidate keys (from 3-attribute combinations)",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 898,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is a candidate key of the relation R(ABCDEF), {AB->C, C->D, CD->BE, DE->F, EF->A}?",
        "options": [
          {
            "id": 0,
            "text": "AB",
            "feedback": null
          },
          {
            "id": 1,
            "text": "EFB",
            "feedback": null
          },
          {
            "id": 2,
            "text": "BDE",
            "feedback": null
          },
          {
            "id": 3,
            "text": "BCE",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "✅ Option A: ABAB → C\nC → D\nCD → BE\nDE → F\nEF → A AB⁺ = {A, B, C, D, E, F} ⇒ Superkey\nMinimal? Yes. ✅\n✅ AB is a candidate key ✅ Option B: EFBEF → A\nEFB → A, B, E, F\nNow: A + B ⇒ C\nC ⇒ D\nCD ⇒ BE\nDE ⇒ F\nEFB⁺ = {E, F, B, A, C, D} = all attributes ✅\nMinimal? Yes ✅\n✅ EFB is a candidate key ✅ Option C: BDETry BDE⁺ Nothing directly, but\nTry B + D → try combining with E\nD + E → F\nEF → A\nA + B ⇒ C\nC ⇒ D\nCD ⇒ BE\nEventually BDE⁺ = {B, D, E, F, A, C} = all ✅\nMinimal? Yes ✅\n✅ BDE is a candidate key ✅ Option D: BCENone as BDE is a CK and C->D then C can also be a part of CK or become a prime attribute Hence BCE is a candidate key",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 903,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relation with given functional dependencies:      R(p,q,r,s,t,u,v,w) , F.D’s: {p→qr, s→p, ru→v, w→uv, rp→s} What is the number of candidate keys for relation R _______",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 2,
          "max": 2,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "here first observe that t and w aren’t generated by any F.D so it is fixed that (t,w) must have subset of each keys, now  (p,t,w)+ = {p,t,w,q,r,u,v,s}   (s,t,w)+ = {s,t,w,p,q,r,u,v}",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 922,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relational schema F(PQRST) with functional dependencies: {PQ→R, S->T, T->P, S-> Q); The number of additional relations are required to convert it into lossless join & Dependency preserving 2NF Decomposition is ?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "R(PQRST) (PQ, R-S, S-T, T→P, S->Q; Candidate key = [S] Prime attribute = {S} There is no partial dependency as the CK is a simple CK hence the relation is already in 2NF So, '0' (No more) additional relation required to decompose into 2NF.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 930,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider relations R (P, Q, R, S, T) with given set of FDs [P -> QR, QR->T, Q->S, T->P]. Now consider the following statements: S1: P will be the candidate key of relation R. S2: Q will be the candidate key of relation R. S3: T will be the candidate key of relation R. S4: RS will not be the candidate key of relation R. Ss: QR will be the candidate key of relation R. How many given statements is /are true?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 4,
          "max": 4,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "P+ = {P,Q,R,S,T}    => Candidate key T+ = { P,Q,R,S,T) {using T -> P}  => Candidate key Q+ = {Q, S}   => Not a candidate key RS+ = {R,S}  => Not a Candidate key QR+ = {P,Q,R,S,T} {using Q->S}  => Candidate key Hence, {P, T, QR} are the candidate keys of relation R.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 933,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a relation R(F1,F2,F3,F4,F5,F6,F7) with the following functional dependency set F = {F1F2 → F3F4F5F6, F3 → F1F4F5, F4 → F2F1, F2F5 → F1F6} Relation R is in",
        "options": [
          {
            "id": 0,
            "text": "1NF but not in 2NF",
            "feedback": null
          },
          {
            "id": 1,
            "text": "2NF but not in 3NF",
            "feedback": null
          },
          {
            "id": 2,
            "text": "3NF but not in BCNF",
            "feedback": null
          },
          {
            "id": 3,
            "text": "BCNF",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "For the above relation Candidate keys are {F1F2F7, F3F7, F4F7, F2F5F7} Prime attributes are {F1, F2, F3, F4, F5, F7}",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 939,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the relation R( C,S,E,I,T) with the following functional dependencies                             { T→E, SI→T } Find the no. of relations in BCNF decomposition",
        "options": []
      },
      "answer": {
        "range": {
          "min": 3,
          "max": 3,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "CSI is a candidate key in R. T → E        is not in BCNF SI → T       is also not in BCNF Therefore, {TE, SIT, CSI} is BCNF decomposition.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 950,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Given a relation R(A,B,C,D) with FDs A→B, C→D, and a decomposition into R1(A,B) and R2​(C,D), which statement is true?",
        "options": [
          {
            "id": 0,
            "text": "The decomposition is dependency preserving.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "The decomposition is lossless.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The decomposition is neither dependency preserving nor lossless.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "The decomposition is both dependency preserving and lossless.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Dependency Preserving:                     FD A→B is preserved in R1(A,B).                      FD C→D is preserved in R2(C,D).  Lossless Join:                                      For a decomposition to be lossless, the intersection of the decomposed relations must form a superkey in at least one of the original relations.                                      R1 and R2 have no common attributes, so R1∩R2=∅, which does not form a superkey.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 953,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "A relation R(P,Q,R,S) has functional dependencies {P→QR,QS→R}. If R is decomposed into R1​(P,Q,R) and R2​(Q,R,S), How many statements are correct? S1: Lossy Decomposition S2: Dependency not preserving decomposition",
        "options": []
      },
      "answer": {
        "range": {
          "min": 1,
          "max": 1,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Lossless Decomposition:           Common attributes: R1∩R2={Q,R}            Since QS→R, QR can not be a super key/candidate key for R2 as {QR}+ = {Q,R}.           Since P→QR, QR can not be a super key/candidate key for R1 as {QR}+ = {Q,R}.           Therefore, the decomposition is lossless.             Statement 1 is incorrect. Dependency Preserving Decomposition:             P→QR is preserved in R1.              QS→R is preserved in R2.               Statement 2 is correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 966,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "You are given the following set of functional dependencies for a relation R(A,B,C,D,E,F), F = {AB → C, DC → AE, E → F }. i. Is this relation in BCNF? ii. Is the decomposition (A,B,C,D)  (B,C,D,E,F) a dependency preserving decomposition?",
        "options": [
          {
            "id": 0,
            "text": "i: Yes, ii: Yes",
            "feedback": null
          },
          {
            "id": 1,
            "text": "i: Yes, ii: No",
            "feedback": null
          },
          {
            "id": 2,
            "text": "i: No, ii: No",
            "feedback": null
          },
          {
            "id": 3,
            "text": "i: No, ii: Yes",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Relation: R(A, B, C, D, E, F)\nFunctional Dependencies: AB → C\nDC → AE\nE → F\nPart i: Is R in BCNF?To be in BCNF, for every functional dependency X → Y, X should be a superkey. Let’s check: AB → C\nAB+ = {A, B, C} → not full attributes → not superkey ❌\nDC → AE\nDC+ = {D, C, A, E, F} (because E → F)\nSo DC+ covers all attributes ⇒ DC is a superkey ✅\nE → F\nE+ = {E, F} → not all attributes → not a superkey ❌\n⛔ So, R is not in BCNF Part ii: Check Dependency Preservation in decomposition: (A,B,C,D) and (B,C,D,E,F)FDs: AB → C → present in R1 (A,B,C,D) ✅\nDC → AE\nDC → A ✅ in R1 (A,B,C,D)\nDC → E ✅ in R2 (B,C,D,E,F)\nE → F → present in R2 ✅\n✅ All FDs are preserved. ✅ Final Answer:i: No (Not in BCNF)\nii: Yes (Dependency preserving)",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 968,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a relation with 3000 record and a block can hold 35 keys in leaf node and 40 block pointers in internal nodes of B+ tree. Relation use dense b+ tree for indexing the minimum number of levels of index (root node is at level 0) required is ___________",
        "options": []
      },
      "answer": {
        "range": {
          "min": 3,
          "max": 3,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "at leaf node level a block can hold 35 key so total no of nodes needed = ceil(3000/35)= 86 Now at upper level then this a block can hold 40 block pointer means 39 keys so total no of nodes needed = ceil(86/39)= 3 Now ceil(3/39)=1 So total 3 levels needed.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 978,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "In a B+ tree, if the search key field value is 13 bytes and records pointer is 9 bytes long and block pointer 7 bytes, block size is 1024 bytes. Then the order of internal (non-leaf) node in B+ tree is ?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 51,
          "max": 51,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "In a B+ tree internal node contain block pointer and keys. P × Bp + (P-1) key ≤ Block size P *7 + (P-1) 13 ≤ 1024 7P + 13P - 13 ≤ 1024 20P - 13 ≤ 1024 20P = 1037 P =floor of (51.85)= 51",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 999,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following given relations:  R(a,b,c) , S(c,d,e) R has 1500 tuples and S has 2000 tuples at a instance of time and the non-null attribute c in S referencing the attribute c in R, let X be the maximum tuples possible in R⋈S and Y be the minimum number of tuples possible in R⋈S than X-Y = __________",
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Here the attribute c of relation S refers the attribute c of relation R, so while natural join each attribute of S relates with exact one attribute of R  So min = 2000 and max =2000",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1019,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the join of a relation R1 with R2. If R1 has 16 tuples and R2 has 4 tuples then the minimum size of the join is",
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "The minimum size of the join occurs when no tuples in R1 able to combine with any tuples of R2.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1031,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Given a table Students with columns StudentID, Name, Age, Score, which of the following SQL queries will return the highest score for each age group?",
        "options": [
          {
            "id": 0,
            "text": "SELECT Age, MAX(Score) FROM Students GROUP BY Age;",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT Age, Score FROM Students GROUP BY Age;",
            "feedback": null
          },
          {
            "id": 2,
            "text": "SELECT Age, MAX(Score) FROM Students;",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT Age, Score FROM Students WHERE Score = (SELECT MAX(Score) FROM Students GROUP BY Age);",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Option A correctly uses the MAX function with GROUP BY to get the highest score for each age group",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1036,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following queries will correctly return the names of students who have received the highest grade in any course?",
        "options": [
          {
            "id": 0,
            "text": "SELECT StudentName FROM StudentGrades WHERE Grade = (SELECT MAX(Grade) FROM StudentGrades);",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT StudentName FROM StudentGrades WHERE Grade IN (SELECT MAX(Grade) FROM StudentGrades GROUP BY CourseID);",
            "feedback": null
          },
          {
            "id": 2,
            "text": "SELECT StudentName FROM StudentGrades sg WHERE Grade = (SELECT MAX(Grade) FROM StudentGrades WHERE CourseID = sg.CourseID);",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT StudentName FROM StudentGrades GROUP BY CourseID;",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "[B]: This query finds the highest grade in each course and returns the names of students who have those grades. [C]: This query uses a correlated subquery to find the highest grade for each course and returns the names of students with those grades.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1037,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a table Products with columns ProductID, ProductName, CategoryID, and Price. Which of the following queries will correctly return the product names and prices of the products with the highest price in each category?",
        "options": [
          {
            "id": 0,
            "text": "SELECT ProductName, Price FROM Products WHERE Price = (SELECT MAX(Price) FROM Products);",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT ProductName, Price FROM Products WHERE Price IN (SELECT MAX(Price) FROM Products GROUP BY CategoryID);",
            "feedback": null
          },
          {
            "id": 2,
            "text": "SELECT ProductName, Price FROM Products p WHERE Price = (SELECT MAX(Price) FROM Products WHERE CategoryID = p.CategoryID);",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT ProductName, Price FROM Products GROUP BY CategoryID",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "B. This query finds the maximum price in each category and then selects product names and prices where the price matches one of those maximum prices. C. This query selects the product name and price for each product where the price equals the maximum price for that product's category. Hence, [B] correctly returns products with the highest price by grouping categories. [C] correctly returns products with the highest price in their respective categories using a correlated subquery",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1038,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Given a table Orders with columns OrderID (PK), CustomerID, OrderDate, and OrderAmount, which of the following queries will return the number of orders placed by each customer? The given table may contains null values.",
        "options": [
          {
            "id": 0,
            "text": "SELECT CustomerID, COUNT(OrderID) FROM Orders GROUP BY CustomerID;",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT CustomerID, COUNT(*) FROM Orders GROUP BY CustomerID;",
            "feedback": null
          },
          {
            "id": 2,
            "text": "SELECT CustomerID, COUNT(OrderAmount) FROM Orders GROUP BY CustomerID;",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT CustomerID, COUNT(OrderID) FROM Orders;",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Correct Queries: A. SELECT CustomerID, COUNT(OrderID) FROM Orders GROUP BY CustomerID; -This query counts the number of OrderIDs for each CustomerID. B. SELECT CustomerID, COUNT(*) FROM Orders GROUP BY CustomerID; -This query counts all rows for each CustomerID, effectively counting the orders since each row represents an order. Incorrect Queries: C. SELECT CustomerID, COUNT(OrderAmount) FROM Orders GROUP BY CustomerID; -This query counts the OrderAmount column, which is not meaningful for counting the number of orders as it may contains null values which can give different result. D. SELECT CustomerID, COUNT(OrderID) FROM Orders; -This query lacks a GROUP BY clause and will result in an error if multiple customers exist.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1045,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the relation Employee (SSN, Ename, Salary, Dno) Q: SELECT Ename FROM Employee E1 WHERE NOT EXISTS ( SELECT Salary from Employee E2 WHERE Dno = 5 and E1. SALARY < = E2. SALARY) ‘Q’ gives the names of employees whose salary is",
        "options": [
          {
            "id": 0,
            "text": "Greater than some employee’s salary in Dno 5",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Greater than all employee’s salary in Dno 5",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Less than all employee’s salary in Dno 5",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Less than some employee’s salary in Dno 5",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "The inner query gives the salary of all employees whose salary is greater than given employee salary and is working in department no 5. But we are displaying the given employee name if there does not exist such salary. It means we are displaying the employee name if his/her salary is greater than all other employees’ salary who are working in department number 5. So, the answer is option (b).",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1056,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following tuple relational calculus expression(s) is/are equivalent to ∃t ∈ Student(S(t))?",
        "options": [
          {
            "id": 0,
            "text": "¬∀t ∈ Student (¬S(t))",
            "feedback": null
          },
          {
            "id": 1,
            "text": "¬∀t ∈ Student (S(t))",
            "feedback": null
          },
          {
            "id": 2,
            "text": "∀t !∈ Student (¬S(t))",
            "feedback": null
          },
          {
            "id": 3,
            "text": "∀t !∈ Student (S(t))",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution: (a) The given statement means for there exist a tuple from student, S is true. (i) is correct :All tuples do not exist in student where S is not true. (ii) is not correct as it as saying all tuples does not exist in student where S is true (iii) is not correct as it as saying all tuples does not belongs to student where S is not true and (iv) is also not correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1057,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schemas : Branch_Schema = (branch_name, assets, city) Customer_Schema = (cutstomer_name, street, city) Deposit_Schema = (branch_name, account_number, customer_name, balance) Borrow_Schema = (branch_name, loan_number, customer_name, amount) Which of the following is a correct way to write tuple relational calculus of the given English query? Finds all customers who have balance more than 25,000?",
        "options": [
          {
            "id": 0,
            "text": "{t |∃t ∈ deposit (t(customer_name = s(customer_name)) V [amount]>25,000}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{t |t(customer_name) | t∈ deposit V t[amount]>25,000}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t |∃t ∈ deposit (t(customer_name) ∧ s[amount]>25,000}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{ t | ∃s ∈ Deposit ( t[customer_name] = s[customer_name] ∧ s[balance] > 25000 ) }",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (d) is correct answer False : ((customer_name)) V [amount]>25000 ) :- or(V) operator is not correct for given query. False: t |t(customer_name) | t∈ deposit V t[amount]>25000} :- this is not a correct way to write TRC query. False : {t |∃t ∈ deposit (t(customer_name) ∧ s[amount]>25000}:- this is also not a correct way to write TRC query. True: {t |∃t ∈ deposit (t(customer_name = s(customer_name)) ∧ [amount]>25000} this query given appropriate answer according to the question.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1058,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following query language is non-procedural language?",
        "options": [
          {
            "id": 0,
            "text": "Domain relation calculus",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Tuple relation calculus",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Relational algebra",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Both (i) and (ii)",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (d) Both (a) and (b) true A Domain relational calculus is a non procedural query language which specifies to select the vales in a relation. A tuple relational calculus is a non procedural query language which specifies to select the tuples in a relation. A relational algebra is a procedural query language.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1059,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "consider the following relational schema: Student (Roll-no, Student-name ,city , phone_no.) Subject(Sub_id ,Sub_name) Enrollment (Roll-no, Sub_id , department-id, percentage) Which of the following query is equivalent to given query in English? “find the distinct names of all students who scored less than 50% in the course id 16A”.",
        "options": [
          {
            "id": 0,
            "text": "Select distinct S.Student-name from Student as S, Enrollment as E where E.Roll-no = S.Roll-no. AND E.Sub_id=16A AND E.Precent < 50",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Π student-name (σ sub_id = 16A ^ percent < 50 (enrollment ⋈ student)",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{T| S € Student, E € enrollment (E.Roll-no = S.Roll-no. ^ E.Sub_id=16A ^ E.Precent < 50 ^ T.Student-name = S.Student.nmae)}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{ | SR EP ( < Sr , SN > € Student ^ ( < Sr , 16A,Ep >€ Enrollment ^ Ep >= 50}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (a) ,(b) & (c) SQL query is correct It is RA query that also correct It is TRC query correct It is DRC but in last step Ep>=50 is there which is wrong it should be Ep<50",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1060,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schema: Suppliers(sid: integer, sname: string, address: string) Parts(pid: integer, pname: string, color: string) Catalog(sid: integer, pid: integer, cost: real) Which of the following query is equivalent to given query in English?  Find the names of suppliers who supply some red part.",
        "options": [
          {
            "id": 0,
            "text": "πsname(πsid((πpidσcolor=’red’ Parts) ⋈ Catalog) ⋈ Suppliers)",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{T | ∃T 1 ∈ Suppliers(∃X ∈ Parts(X.color =’red’ V ∃Y ∈ Catalog (Y.pid = X.pid ∧ Y.sid = T 1.sid)) ∧ T.sname = T 1.sname)}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{(Y )|(X, Y, Z) ∈ Suppliers ∧ ∃P, Q, R((P, Q, R) ∈ Parts ∧ R =’red’ ∧ ∃I, J, K((I, J, K) ∈ Catalog ∧ J = P ∧ I = X))}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT S.sname FROM Suppliers S, Parts P, Catalog C WHERE P.color=’red’ OR C.pid=P.pid AND C.sid=S.sid",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (a)& (c) is correct RA query is correct TRC query is wrong because (X.color =’red’ V ∃Y ∈ Catalog) it should be like (X.color =’red’ ∧ ∃Y ∈ Catalog) DRC query is correct SQL query is incorrect (Catalog C WHERE P.color=’red’ OR C.pid=P.pid AND C.sid=S.sid) Instead of OR there Should be AND.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1061,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schema: Suppliers(sid: integer, sname: string, address: string) Parts(pid: integer, pname: string, color: string) Catalog(sid: integer, pid: integer, cost: real) Which one of the english query is correct for given query in TRC? (MCQ) {T | ∃T 1 ∈ Catalog (∀X ∈ Parts(∃T 2 ∈ Catalog (T 2.pid = X.pid ∧ T 2.sid = T 1.sid)) ∧ T.sid = T 1.sid)}.",
        "options": [
          {
            "id": 0,
            "text": "Find the sids of suppliers who supply at least one part.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Find the sids of suppliers who supply every part.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Find the sids of suppliers who supply no part.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Find the sids of suppliers who supply at most one part.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (b) Find the sids of suppliers who supply every part. (∀X ∈ Parts(∃T 2 ∈ Catalog (T 2.pid = X.pid ∧ T 2.sid = T 1.sid)) In this query we can see that all the x which belongs to parts is compared with T2 which belongs to catalog pid. So, correct answer for this query is the sids of suppliers who supply every part. The RA query for this TRC is : (πsid,pidCatalog)/(πpidP arts) The SQL query for this TRC is : SELECT C.sid FROM Catalog C WHERE NOT EXISTS (SELECT P.pid FROM Parts P WHERE NOT EXISTS (SELECT C1.sid FROM Catalog C1 WHERE C1.sid = C.sid AND C1.pid = P.pid)).",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1062,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which one of the following is the example of unsafe query?",
        "options": [
          {
            "id": 0,
            "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{t | ∃u ∈EMP (t[EMPName] = u[EmpName] ∧ ∃v ∈DEPT (t[DeptId] ≠ DeptId]))}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t ∣ ∃u ∈ R1(t[A] = u[A]) ∧ ¬∃s ∈ R2(t[A]=s[A])}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{E.ename |¬ (E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid)))}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (d) is correct option it is called UNSAFE. {E.ename |¬ (E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid)))} is UNSAFE! Technique to guarantee SAFENESS can be applied to transform a query.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1063,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following tuple relational calculus expression(s) is/are equivalent to P1 ∧ P2?",
        "options": [
          {
            "id": 0,
            "text": "(¬ (P1) ∨¬ (P2))",
            "feedback": null
          },
          {
            "id": 1,
            "text": "¬ (¬ (P1) ∧ ¬ (P2))",
            "feedback": null
          },
          {
            "id": 2,
            "text": "¬ (¬ (P1) ∨¬ (P2))",
            "feedback": null
          },
          {
            "id": 3,
            "text": "(¬ (P1) ∧ ¬ (P2))",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution (c) option is true ¬ (¬ (P1) ∨ ¬ (P2)): This expression is the negation of the logical OR of the negations of P1 and P2. Applying De Morgan’s law, we can simplify it to P1 ∧ P2. Therefore, this expression is equivalent to P1 ∧ P2.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1064,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following SQL query is correct for given DRC(domain relation calculus )? {(Eid1)|(Eid1,EN1,ES1)∈ Employess∧ ¬(∃Eid2,EN2,ES2((Eid2,EN2,ES2) ∈ Employess ∧ ES2 > ES1))}",
        "options": [
          {
            "id": 0,
            "text": "SELECT E.eid FROM Employees E WHERE E.salary IN( Select MIN (E2.salary) FROM Employees E2 )",
            "feedback": null
          },
          {
            "id": 1,
            "text": "SELECT E.eid FROM Employees E WHERE E.salary not IN( Select MAX (E2.salary) FROM Employees E2 )",
            "feedback": null
          },
          {
            "id": 2,
            "text": "SELECT E.eid FROM Employees E WHERE E.salary = ( Select MAX (E2.salary) FROM Employees E2 )",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT E.eid FROM Employees E WHERE E.salary = ( Select MIN (E2.salary) FROM Employees E2 )",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution (c) option is correct The DRC query return the maximum salary of the employee so correct option is SELECT E.eid FROM Employees E WHERE E.salary = ( Select MAX (E2.salary) FROM Employees E2 )",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1065,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relations containing airline flight information:  Flights(flno: integer, from: string, to: string, distance: integer, departs: time, arrives: time) Aircraft(aid: integer, aname: string, cruisingrange: integer)  Certified(eid: integer, aid: integer)  Employees(eid: integer, ename: string, salary: integer) Find the names of pilots certified for some Boeing aircraft.  Which one of the TRC (tuple relation calculus) expression is equivalent to above English query?",
        "options": [
          {
            "id": 0,
            "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid V A.aname = ‘Boeing’ V E.eid = C.eid))}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ V E.eid = C.eid))}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid V A.aname = ‘Boeing’ ∧ E.eid = C.eid))}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution: (a) is correct option True: {E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))} returns the names of pilots certified for some Boeing aircraft. False : In this query OR apply between inner query , it can’t pick appropriate result because of the OR symbol.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1066,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relations containing airline flight information:  Flights(flno: integer, from: string, to: string, distance: integer, departs: time, arrives: time)  Aircraft(aid: integer, aname: string, cruisingrange: integer)  Certified(eid: integer, aid: integer)  Employees(eid: integer, ename: string, salary: integer)  Which one of the english query is correct for given query in TRC (Tuple relation calculus)?  {E1.eid | E1 ∈ Employees ∧ ∃E2 ∈ Employees(E2.salary > E1.salary ∧¬(∃E3 ∈ Employees(E3.salary > E2.salary)))}.",
        "options": [
          {
            "id": 0,
            "text": "The eids of employees who make the highest salary.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "The eids of employees who make the second highest salary",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The eids of employees who make the second Lowest salary.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "The eids of employees who make the lowest salary.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "solution : (ii) is correct option {E1.eid | E1 ∈ Employees ∧ ∃E2 ∈ Employees(E2.salary > E1.salary ∧¬(∃E3 ∈ Employees(E3.salary > E2.salary)))} this query return The eids of employees who make the second highest salary. In this query Inner most query returns the Highest salary but we apply negation here which is used to remove the highest salary and then middle query is pickup highest salary but it has not taken inner most result salary which is highest. Finally outer query produce 2nd highest salary employee.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1067,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following statements correctly describes Tuple Relational Calculus (TRC)?",
        "options": [
          {
            "id": 0,
            "text": "TRC specifies the order of operations to retrieve data from a database.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "TRC uses logical formulas to describe the properties of the desired tuples.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "TRC uses a sequence of relational algebra operations to manipulate relations.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "TRC is used to define the physical structure of a database.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Tuple Relational Calculus specifies what information the result should contain without describing how to compute it, using logical formulas to express the properties of the tuples.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1068,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "In Tuple Relational Calculus, the formula {t | P(t)} denotes:",
        "options": [
          {
            "id": 0,
            "text": "A set of all tuples t such that predicate P(t) is true.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "A specific tuple t that satisfies the predicate P(t).",
            "feedback": null
          },
          {
            "id": 2,
            "text": "The selection of a single attribute from a tuple t.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "A sequence of tuples that satisfy the predicate P(t).",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "In TRC, {t | P(t)} represents the set of all tuples t for which the condition P(t) holds true.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1069,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following is an example of a tuple variable in Tuple Relational Calculus?",
        "options": [
          {
            "id": 0,
            "text": "Employee",
            "feedback": null
          },
          {
            "id": 1,
            "text": "x.Age",
            "feedback": null
          },
          {
            "id": 2,
            "text": "x",
            "feedback": null
          },
          {
            "id": 3,
            "text": "SELECT * FROM Employee",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "In TRC, x is a tuple variable that ranges over tuples in a relation.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1070,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following Tuple Relational Calculus expressions correctly retrieves the names of employees with a salary greater than 5000?",
        "options": [
          {
            "id": 0,
            "text": "{t | Employee(t) AND t.salary > 5000 AND ∃s (s.name = t.name)}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{t | ∃s ∈ Employee(t) (s.salary > 5000 AND t.name = s.name)}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t | Employee(t) AND t.salary > 5000}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{t | Employee(t) AND t.salary > 5000 AND t.name}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "This expression retrieves all tuples t from the Employee relation where t.salary > 5000.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1071,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Given the following relational schemas Student (studId, name, age, sex, deptNo, advisor) Department (deptId, DName, hod, phoneNo) Which of the following will be the TRC query to obtain the department names that do not have any girl students? #2",
        "options": [
          {
            "id": 0,
            "text": "{d.Dname | department(d) ∧ ~ ((∃(s)) student(s) ∧ s.sex ≠ ‘F’ ∧ s.deptNo = d.deptId)}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{d.Dname | department(d) ∧ ((∀ (s)) student(s) ∧ s.sex = ‘F’ ∧ s.deptNo = d.deptId)}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{d.Dname | department(d) ∧ ~ ((∃(s)) student(s) ∧ s.sex = ‘F’ ∧ s.deptNo = d.deptId)}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "To display the department name in output, there should not exist at least one student row in student relation such that student department number is equal to the deptId of that department and student sex is female. So, C is the correct answer",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1072,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Choose an expression in the tuple relational calculus that is equivalent to each of the following relational algebra: ΠA(r)",
        "options": [
          {
            "id": 0,
            "text": "{t | ∃ q ∈ r (q[A] = t[A])}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{t ∣ ∀q∈r(q[A]=t[A])}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t ∣ t[A]≠q[A]∧q∈r}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "B: The use of ∀ is incorrect because projection does not involve checking all tuples. Projection only selects the specific attribute values, so ∀ is not suitable. C: This expression is invalid because it includes tuples where t[A]≠q[A]. Projection should include tuples with the same value for attribute A, not exclude them.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1073,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let the following relation schemas be given: R = (A, B, C). Let relations r(R) be given. Select an equivalent Tuple Relational Calculus (TRC) expression for each of the given Relational Algebra (RA) operations: σB = 17 (r)",
        "options": [
          {
            "id": 0,
            "text": "{t ∣ t ∈ r ∨ t[B]=17}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{t ∣ t ∉ r ∧ t[B]=17}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t ∣ t ∈ r ∧ t[B]=17}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A: The use of ∨ (OR) is incorrect because it would include all tuples in r, even if t[B]≠17, which does not match the condition. B: The condition t∉r contradicts the requirement that t must be in r, so it will not return the correct result.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1078,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider a relation Product(P_ID, P_Name, Price). Which of the following tuple relational calculus expressions retrieves all products whose price is less than 100?",
        "options": [
          {
            "id": 0,
            "text": "{P ∣ P.Price>100∧P∈Product}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{P.P_ID,P.P_Name ∣ P.Price<100∧P∈Product}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{P.P_Name ∣ P∈Product∧P.Price<100}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{P.Price ∣ P∉Product∧P.P_ID<100}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A: Incorrect, retrieves prices >100 B: Incorrect, retrieves only P_ID and P_Name C: Correct, retrieves product names with Price<100 D: Incorrect, irrelevant logic with P∉Product",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1079,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following relational schema Students (Sno, Sname, age, sex) CourseInfo(courseNo, courseName, instructorName) Enroll(Sno, courseNo, hours) Which of the following queries is/are equivalent to this query in English? “Find the names of all students who enrolled in all courses instructed by ‘Sindhu’.” I.{S.Sname/ Student(S) and ∀∁ ((CourseInfo (C) and ∁.instructorName = ‘Sindhu’)→ (∃e) (Enroll (e) and e. Sno = S.Sno ^ e.courseNo = c.courseNo))} II.Select Sname FROM Students S WHERE EXISTS ((SELECT courseNo FROM CourseInfo WHERE InstructorName = ‘Sindhu’) EXCEPT (Select courseNo FROM Enroll e WHERE e. Sno = S.Sno));",
        "options": [
          {
            "id": 0,
            "text": "I only",
            "feedback": null
          },
          {
            "id": 1,
            "text": "II only",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Both I & II",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of the above",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "I → This is a Tuple Relational Calculus (TRC) language expression. It is not a procedural language (i.e. it only tells “what to do”, not “how to do”). It just represents a declarative mathematical expression. Here we are displaying those student names such that they enrolled for all courses taught by instructor Name ‘Sindhu’. So, I is correct. II → This is incorrect because in the given query, we retrieve the names of the students who enrolled for at least one course taught by sindhu. Since, we need to find the names of the students who enrolled for all the courses taught by sindhu, NOT EXISTS clause will best fit the context instead of EXISTS. Therefore, the answer is option (a).",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1080,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let the following relation schemas be given: R = (A, B, C), S = (D, E, F) Let relations r(R) and s(S) be given. Choose an expression in the relational calculus that is equivalent to each of the following tuple relational algebra: {t | ∃ p ∈ r ∃ q ∈ s (t[A] = p[A] ∧ t[F] = q[F] ∧ p[C] = q[D]}",
        "options": [
          {
            "id": 0,
            "text": "ΠA,F (σC ≠ D (r × s))",
            "feedback": null
          },
          {
            "id": 1,
            "text": "ΠA,F​(σC=D​(rxs))",
            "feedback": null
          },
          {
            "id": 2,
            "text": "ΠA,F​(σC=D​(r⋈s))",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A: The condition C≠D is incorrect, as the TRC explicitly specifies C=D, which selects tuples where p[C]=q[D] C: The use of r⋈s (natural join) is incorrect because it automatically matches all common attributes, which is not explicitly specified in the given TRC.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1081,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let R = (A, B, C), and let r1 and r2 both be relations on schema R. Match RA operation with its equivalent TRC: ΠA,B​(r1​) ⋈ ΠB,C​(r2​)",
        "options": [
          {
            "id": 0,
            "text": "{⟨a,b,c⟩ ∣ ∀p,q(⟨a,b,p⟩∈r1​∧⟨q,b,c⟩∈r2​)}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{⟨a,b,c⟩ ∣ ∃p,q(⟨a,b,p⟩∉r1​∨⟨q,b,c⟩∉r2​)}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{< a, b, c > | ∃ p, q (< a, b, p > ∈ r1 ∧ < q, b, c > ∈ r2)}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A:  The use of ∀ (for all) is incorrect because the join requires specific tuples where b matches, not all possible tuples. B: The use of ∉ and ∨ (OR) is incorrect because it selects tuples that are not part of r1​ or r2​, which contradicts the join operation.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1082,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the relational database employee (person-name, street, city) works (person-name, company-name, salary) company (company-name, city) Which of the following is the correct statement for the given TRC? TRC: {t | ∃ e ∈ employee ∃ w ∈ works ∃ c ∈ company (t[person-name] = e[person-name] ∧ e[person-name] = w[person-name] ∧ w[company-name] = c[company-name] ∧ e[city] = c[city])",
        "options": [
          {
            "id": 0,
            "text": "Find the names of all employees in this database",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Find the names of all employees in this database who live in the same city as the company for which they work",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Find the names of all companies and their employees",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A: This does not satisfy the condition of matching the city of residence with the company's city.C: The TRC does not retrieve company names independently or without filtering based on matching cities.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1083,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the relational database employee (person-name, street, city) works (person-name, company-name, salary) Which of the following is/are the correct TRC for the given problem statement? “Find the names and cities of residence of all employees who work for Knowledge Gate”",
        "options": [
          {
            "id": 0,
            "text": "{t | ∃ r ∈ employee ∃ s ∈ works ( t[person-name] = r[person-name] ∧ t[city] = r[city] ∨ r[person-name] = s[person-name] ∧ s[company-name] = “Knowledge Gate”)}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{< p, c > | ∃ co, sa, st (< p, co, sa > ∈ works ∧ < p, st, c > ∈ employee ∧ co = “Knowledge Gate”)}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{t | ∃ r ∈ employee ∃ s ∈ works ( t[person-name] = r[person-name] ∧ t[city] = r[city] ∧ r[person-name] = s[person-name] ∧ s[company-name] = “Knowledge Gate”)}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of these",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Option 2:  Combines tuples from works and employee where: The person works for \"Knowledge Gate.\"Retrieves the name (ppp) and city (ccc).Correct as it matches the required query. Option 3: Matches tuples in employee and works based on person-name and ensures the company name is \"Knowledge Gate.\" Correctly retrieves the name and city of the employee. Incorrect Options: Option 1 uses ∨\\lor∨ instead of ∧\\land∧, leading to invalid results.Option 4 (\"None of these\") is invalid as 2 and 3 are correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1085,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Given a relation Employee(Emp_ID, Name, Salary, Dept), which Tuple Relational Calculus expression retrieves the IDs of employees whose salary is greater than 50,000?",
        "options": [
          {
            "id": 0,
            "text": "{E.Emp_ID ∣ E∈Employee∧E.Salary>50000}",
            "feedback": null
          },
          {
            "id": 1,
            "text": "{E.Salary ∣ E∈Employee∧E.Emp_ID>50000}",
            "feedback": null
          },
          {
            "id": 2,
            "text": "{E ∣ E∈Employee∧E.Emp_ID>50000}",
            "feedback": null
          },
          {
            "id": 3,
            "text": "{E.Emp_ID ∣ E∉Employee∧E.Salary<50000}",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A: Correct – Retrieves E.Emp_ID for employees where E.Salary>50000 B: Incorrect – Retrieves E.Salary instead of E.Emp_ID C: Incorrect – Does not filter by salary >50000 D: Incorrect – Uses E∉Employee, which is invalid.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1086,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following ensures the durability property of a set of transactions?",
        "options": [
          {
            "id": 0,
            "text": "Recovery control system",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Concurrency control system",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Security management system",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Transaction control system",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "(a) Recovery control system The recovery system is responsible for the maintenance of durability. In addition, it also ensures atomicity.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1087,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the property is a part of ACID property?",
        "options": [
          {
            "id": 0,
            "text": "Authentication",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Conflict serializable",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Isolation",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Deadlock freedom",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (iii) isolation In the context of transaction processing, the acronym ACID refers to the four key properties of a transaction: atomicity, consistency, isolation, and durability.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1088,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following two statements about database transaction schedules: S1: Rigorous two-phase locking protocol generates cascade less schedules that are free from deadlock. S2: Timestamp-ordering concurrency control protocol with Thomas’ Write Rule can generate cascade less schedules that are free from deadlock. Which of the above statements is/are TRUE?",
        "options": [
          {
            "id": 0,
            "text": "S1 ONLY",
            "feedback": null
          },
          {
            "id": 1,
            "text": "S2 ONLY",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Both S1 and S2",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Neither S1 nor S2",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Answer: (d) Neither S1 nor S2 False: Rigorous two-phase locking protocol generates cascade less schedules but not guarantee about deadlock free schedule. False: Timestamp-ordering concurrency control protocol with Thomas’ Write Rule cannot generate cascade less schedules but it ensure deadlock freedom.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1091,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Let S be the following schedule of operations of three transactions T1, T2 and T3 in a relational database system:  S: r1(X); r3(Y); r2(Y); r3(X); r1(Z);r2(Z); w3(Y); w1(X); w2(Z); w1(Z)  Consider the statements S1 and S2 below:  S1: S is conflict-serializable.  S2: If T2 commits before T1 finishes, then S is recoverable.  Which one of the following choices is correct?",
        "options": [
          {
            "id": 0,
            "text": "Both P and Q are true",
            "feedback": null
          },
          {
            "id": 1,
            "text": "P is true and Q is false",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Both P and Q are false",
            "feedback": null
          },
          {
            "id": 3,
            "text": "P is false and Q is true",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Identifying conflicts: r1(X) → w1(X) → No conflict (same transaction).  r3(Y) → w3(Y) → No conflict (same transaction).  r2(Y) → w3(Y) → Conflict: T2 reads Y before T3 writes Y → T2 → T3.  r1(Z) → w1(Z) → No conflict (same transaction).  r2(Z) → w2(Z) → No conflict (same transaction).  w3(Y) → w1(X) → No conflict (different variables).  w1(X) → w2(Z) → No conflict (different variables).  w2(Z) → w1(Z) → Conflict: T2 writes Z before T1 writes Z → T2 → T1.  Precedence Graph:  T2 → T3 (due to Y conflict)  T2 → T1 (due to Z conflict) T3 → T2 (due to X conflict) The Graph contains a cycle --> T2 → T3 → T2  Therefore, S is not conflict-serializable, making S1 false. For the schedule to be recoverable, no transaction should commit before reading uncommitted data. T2 commits before T1 finishes:   T2 only writes Z.  T1 writes both X and Z.  Since T1 writes after T2, T2 does not read uncommitted data from T1.  Therefore, the schedule is recoverable if T2 commits before T1 finishes.         S2 is true.    Final Conclusion:   S1 is false → The schedule is not conflict-serializable.  S2 is true → The schedule is recoverable.          Thus, the correct answer is:          D. P is false and Q is true",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1092,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following scenarios may lead to an irrecoverable error in a database system?",
        "options": [
          {
            "id": 0,
            "text": "A transaction writes a data item after it is read by an uncommitted transaction.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "A transaction reads a data item after it is read by an uncommitted transaction.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "A transaction reads a data item after it is written by a committed transaction.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "A transaction reads a data item after it is written by an uncommitted transaction.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "A transaction reads a data item after it is written then we cant recover the errors in this situation by an uncommitted transaction.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1093,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schedules involving two transactions: S1: r1(a),r1(b) r2(a) r2(b) w2(b) w1(a) S2: r1(a), r2(a) r2(b) w2(b) r1(b) w1(a) Which one of the following statements is correct with respect to above schedules?",
        "options": [
          {
            "id": 0,
            "text": "Both are not conflict serializable.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Both are conflict serializable.",
            "feedback": null
          },
          {
            "id": 2,
            "text": "S1 is not and S2 is conflict serializable.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "S1 is conflict serializable and S2 is not .",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "For conflict serializability, check precedence graph of S1 and S2.  Cycle exists in S1. Hence S1 is  not conflict serializable. Cycle doesn't not exist in S2. Hence S2 is conflict serializable.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1094,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "What is the number of serial schedules possible containing 4 transactions?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 24,
          "max": 24,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Total number of serial schedules possible containing n transactions= All possible permutation of n = n! Hence , 4! = 24.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1095,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "What is the number of non-serial schedules possible containing 3 transactions of 2,3 and 4 operations respectively?",
        "options": []
      },
      "answer": {
        "range": {
          "min": 1254,
          "max": 1254,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": []
      },
      "solution": "Total number of schedules = (n1+n2+n3)! / n1! * n2! * n3! (here, n1=2, n2=3, n3=4) Total number of serial schedules possible containing n transactions  = All possible permutation of n = n! (here, n=3) Total number of non-serial schedules = total - serial =(2+3+4)!/ (2! *3!* 4!)     -   3!  = 9! / (2*6*24)  - 6 =1260 - 6 = 1254",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1096,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": "GATE",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schedule S consisting of three transactions in a database system: S: r1(X), w1(Y), r2(Y), w2(Z), c1, w3(X), c2, c3  How many edges are there in precedence graph of the given schedule?",
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 2,
          "max": 2,
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Explanation:r1(X) → Transaction 1 reads X. w1(Y) → Transaction 1 writes Y. r2(Y) → Transaction 2 reads Y → Conflict with w1(Y) → T1 → T2. w2(Z) → Transaction 2 writes Z. c1 → Transaction 1 commits. w3(X) → Transaction 3 writes X → Conflict with r1(X) → T1 → T3. c2 → Transaction 2 commits. c3 → Transaction 3 commits. Precedence Graph: T1 → T2 (due to Y conflict) T1 → T3 (due to X conflict) Total edges in the precedence graph: 2",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1097,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following transactions with data items P,Q,R and S initialized to zero: T1: read (P); If P = 0 then p: = 2p + 5; Write (P); T2: read (Q); If Q = 0 then Q: = Q + 5; Write (Q); T3: read (R); If R = 0 then R: = R + 10; Write (R); T4: read (S); If S = 0 then S: = S + 1; Write (S); Any non-serial interleaving of T1, T2, T3 and T4 for concurrent execution leads to",
        "options": [
          {
            "id": 0,
            "text": "An Irrecoverable serializable schedule",
            "feedback": null
          },
          {
            "id": 1,
            "text": "A schedule that is not conflict serializable",
            "feedback": null
          },
          {
            "id": 2,
            "text": "A conflict serializable schedule",
            "feedback": null
          },
          {
            "id": 3,
            "text": "A deadlock present schedule",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "T1 reads and writes P. T2 reads and writes Q. T3 reads and writes R. T4 reads S and writes S. This schedule is conflict-serializable because there are no conflicting operations (read-write or write-write) between transactions",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1098,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following statement is false?",
        "options": [
          {
            "id": 0,
            "text": "Every cascade less schedule is recoverable.",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Every strict schedule is conflict serializable",
            "feedback": null
          },
          {
            "id": 2,
            "text": "A conflict serializable schedule is always equivalent to one and only one single serial schedule.",
            "feedback": null
          },
          {
            "id": 3,
            "text": "All conflict serializable schedules are view serializable, but the reverse need not be true.",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution: (b) and (c) are false True: Every cascadeless schedule is also recoverable because in a cascadeless schedule, the commit operations occur in the same sequence as that of write and read operations of two transactions respectively. False : Every serializable schedule is strict. But every strict schedule is not serializable. A Schedule is a serializable schedule if its outcome is equal to the outcome of its transactions executed serially. False: for a conflict serializable schedule, the linear ordering of trasections corresponds to topological sorting of the serialization graph. Since there can be multiple such ordering, multiple equivalent serial schedules may exist. True: All conflict serializable schedules are view serializable, but the reverse need not be true.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1099,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Exclusive locks of the transactions are released at the end of transaction to ensure",
        "options": [
          {
            "id": 0,
            "text": "Key value locking",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Recoverability",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Cascadelessness",
            "feedback": null
          },
          {
            "id": 3,
            "text": "Deadlock freedom",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Solution : (b) and (c) true Transaction holds an exclusive lock on data that prevents other transactions from accessing the data. This lock remains in place until the transaction holding the lock issues a commit or rollback. This method ensure the recoverability and cascadeless ness but it cannot say about deadlock.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1104,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which of the following statements is/are true? I. Strict 2Pl ensures strict schedules II. Basic 2PL allows cascading aborts",
        "options": [
          {
            "id": 0,
            "text": "Only I",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Only II",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Both I & II",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of the above",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Statement I: Strict 2PL means we will unlock the exclusive locks on data items only after committing the transaction. It means the transaction writes or reads the data item only after the previous transaction which wrote it commits. Therefore, strict 2PL ensures strict schedules. So, statement I is correct. Statement II: In basic 2PL, there is no restriction on when to unlock items. If once one transaction unlocks the item and another transaction lock that item and is making changes, then if the previous transaction aborts then this transaction should also abort.  This leads to cascading aborts. So, statement II is correct.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1106,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "What are the potential problems when a DBMS executes multiple transactions concurrently. The dirty read  The durability The phantom read  The serializability",
        "options": [
          {
            "id": 0,
            "text": "3 and 4 only",
            "feedback": null
          },
          {
            "id": 1,
            "text": "1,2 and 4 only",
            "feedback": null
          },
          {
            "id": 2,
            "text": "1 and 3 only",
            "feedback": null
          },
          {
            "id": 3,
            "text": "2 and 4 only",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "Problems due to the concurrent execution of transactions/; The lost update problem The unrepeatable read problem The dirty read problem The phantom read problem",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1107,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Which protocol is satisfied by following transaction: LOCK – X(A) LOCK – S(B) R(A) R(B) W(A) UNLOCK(A) COMMIT UNLOCK(B)",
        "options": [
          {
            "id": 0,
            "text": "Strict 2PL",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Rigorous 2PL",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Conservative 2PL",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of the above",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "The given transaction follows conservative 2PL as before stating the transaction, we obtained all the locks that we require and then we released all the locks after we used. It does not follow strict 2PL, as in strict 2PL we release all exclusive locks after committing transaction. But here ‘A” which is exclusive lock is unlocked after we commit the transaction. As it does not follow strict 2PL, it does not follow rigorous 2PL also.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1109,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "How can we avoid cascading rollbacks? I. Using strict two phase locking protocol II. Using rigorous two phase protocol III. Using basic two phase locking protocol",
        "options": [
          {
            "id": 0,
            "text": "I only",
            "feedback": null
          },
          {
            "id": 1,
            "text": "I and II only",
            "feedback": null
          },
          {
            "id": 2,
            "text": "II and III only",
            "feedback": null
          },
          {
            "id": 3,
            "text": "I, II and III",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "We can avoid cascading rollbacks in strict schedules. In these schedules, transactions can neither read nor write an item X until the last transaction that wrote X has committed (or aborted). We know that strict 2PL and rigorous 2PL ensures strict schedules. Since, in strict 2PL, the transaction does not release any of its exclusive (write) locks until after it commits or aborts, and in rigorous 2PL, the transaction does not release any of its exclusive (write) locks or share (read) locks until after it commits or aborts.",
      "metadata": {
        "status": "DRAFT"
      }
    },
    {
      "questionId": 1111,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": "General",
        "topic": "General",
        "subtopic": null
      },
      "content": {
        "questionText": "Consider the following schedules involving three transactions: S₁: r₁(x), r₂(z), r₁(z), r₃(x), r₃(y), w₁(x), w₃(y), r₂(y), w₂(z), w₂(y) S₂: r₁(x), r₂(z), r₁(z), r₃(x), r₃(y), w₁(x), w₂(z), w₃(y), w₂(y) Which of the following schedules is conflict serializable?",
        "options": [
          {
            "id": 0,
            "text": "Only S₁",
            "feedback": null
          },
          {
            "id": 1,
            "text": "Both S₁ and S₂",
            "feedback": null
          },
          {
            "id": 2,
            "text": "Only S₂",
            "feedback": null
          },
          {
            "id": 3,
            "text": "None of the above",
            "feedback": null
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": []
      },
      "solution": "For S₁: Conflicts: r₃(x) before w₁(x) ⇒ T₃ → T₁ r₁(z) before w₂(z) ⇒ T₁ → T₂ r₃(y) before w₂(y) ⇒ T₃ → T₂ Precedence Graph:  T₃ → T₁  T₁ → T₂  T₃ → T₂  ✅ No cycle ⇒ S₁ is Conflict Serializable For S₂: Conflicts: r₃(x) before w₁(x) ⇒ T₃ → T₁ r₁(z) before w₂(z) ⇒ T₁ → T₂ r₃(y) before w₂(y) ⇒ T₃ → T₂ Precedence Graph:  T₃ → T₁  T₁ → T₂  T₃ → T₂  ✅ No cycle ⇒ S₂ is also Conflict Serializable Both S₁ and S₂ are conflict serializable  Correct option: B. Both S₁ and S₂",
      "metadata": {
        "status": "DRAFT"
      }
    }
  ]
}