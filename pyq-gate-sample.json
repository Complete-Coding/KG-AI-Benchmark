{
  "generatedAt": "2025-10-18T12:59:23.021Z",
  "total": 100,
  "requested": 100,
  "filters": {
    "questionTypes": [
      "MCQ",
      "MSQ",
      "NAT",
      "TRUE_FALSE",
      "FILL_BLANK"
    ],
    "excludeImages": true,
    "status": [
      "DRAFT",
      "PUBLISHED"
    ]
  },
  "stats": {
    "poolSize": 600,
    "poolWithoutImages": 395,
    "countsByType": {
      "MCQ": 56,
      "MSQ": 22,
      "NAT": 21,
      "TRUE_FALSE": 1,
      "FILL_BLANK": 0
    }
  },
  "questions": [
    {
      "id": "6899af945669c1a0beea1edd",
      "questionId": 514,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "How do you make an integer variable x read-only in C?"
                },
                {
                  "type": "hardBreak"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "const int x;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "readonly int x;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "int const x;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "int readonly x;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": []
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-11T08:53:40.312Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "6899af945669c1a0beea1efd",
      "questionId": 515,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What is the scope of a variable declared inside a C function?"
                },
                {
                  "type": "hardBreak"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Global scope"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Local scope"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "File scope"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "External scope"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": []
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-11T08:53:40.939Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "6899af965669c1a0beea1f52",
      "questionId": 518,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which C library function can be used to dynamically allocate memory sufficient for an array of 10 ints?"
                },
                {
                  "type": "hardBreak"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "malloc(10 * sizeof(int));"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "calloc(10, sizeof(int));"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "alloc(10, int);"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both A and B"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": []
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-11T08:53:42.528Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "689b10f152375880419fd25b",
      "questionId": 529,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If A={ϕ, {ϕ}, a, {c, d}, 1}A=𝜙, then which of the following belong to P(A)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "I. ϕ"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "II. {ϕ}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "III. {(a,c,d)}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "IV. {a,c}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "V. {1,a}"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I, II, III"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I, II, V"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "II, IV, V"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "III, V"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(b) Let us analyse each choice. ϕ is an element of original set, so it must belong to power set. {ϕ}is also an element of original set. (a,c,d)is not an element of original set and also it is a single element, hence it cannot be considered as a collection of different elements either. c is also not an element whereas 1and a both are. Hence, I, II and V are correct."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-12T10:01:21.545Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "689b10f152375880419fd25f",
      "questionId": 530,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is NOT a set?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Set of ornaments in a shop"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Set of Nebulas in outer space"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Set of numbers that are both rational and irrational at the same time"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Set of tall trees"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(d) Set of ornaments in a shop, nebulas in space are well defined and can be defined in the form of a collection. So, these are clearly sets. There is no number which is both rational and irrational but this is well defined collection too. So this is a null set. But, set of tall trees is not well defined as there is no distinct measurement of the characteristics ‘tall’."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-12T10:01:21.733Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b001f81afded9c710fc90d",
      "questionId": 545,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "Which of the following is/are true: "
                }
              ]
            },
            {
              "type": "paragraph"
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "The set of real number is countable"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "The set of rational numbers is countable"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "The set of integers is uncountable"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "The set of real number between 0 to ¼ is uncountable"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ],
                "text": "A: This statement is false. The set of real numbers is uncountable. This was proven by Cantor's diagonal argument."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ],
                "text": "B: This statement is true. The set of rational numbers is countable because they can be listed in a sequence (e.g., by arranging them in a two-dimensional grid and then using a diagonal argument to enumerate them)."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ],
                "text": "C: This statement is false. The set of integers is countable because they can be listed in a sequence (e.g., ..., -3, -2, -1, 0, 1, 2, 3, ...)."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "16px",
                      "color": "black"
                    }
                  }
                ],
                "text": "D: This statement is true. Any interval of real numbers, no matter how small (including between 0 and ¼), is uncountable because it has the same cardinality as the set of all real numbers."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T07:15:04.506Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b001f91afded9c710fc918",
      "questionId": 546,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": " Let P,Q,R and S be the sets respectively. Which of the following laws always hold good? "
                },
                {
                  "type": "hardBreak"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "      "
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "P Х (Q Х R) = P Х Q Х R"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "P ⋂ R = P - (P - R)"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "P U (Q ⋂ R) = (P U Q) ⋂ (PU R)"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": " P ⋂ (Q ⋂ R) = P ⋂ Q ⋂ R"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [
          1,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: the elements of LHS of option A is in form (p(qr)) and the elements of LHS is in form (pqr) so both are not equal"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "B: RHS is the way to implement intersection without using intersection"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C: Distributive law"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "D: Associative law"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T07:15:05.449Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b03669d6813c50e845fbbc",
      "questionId": 570,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle"
                    }
                  ],
                  "text": "A binary string is defined as sequence of 0’s and 1’s. The set of all possible finite binary strings is equivalent to which of the following? (MSQ)"
                }
              ]
            },
            {
              "type": "paragraph"
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "R"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "N"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "C"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Q"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": []
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T10:58:49.946Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b03c521afded9c7126940b",
      "questionId": 575,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "Which of the following is correct? "
                }
              ]
            },
            {
              "type": "paragraph"
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "If R=∅ (the empty set), then the relation is symmetric but not transitive and reflexive."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "The relation R on the power set of A defined as R={(a,b)∣a,b∈P(A) and a∩b≠∅} is reflexive, symmetric, but transitive."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": null,
                            "color": null
                          }
                        }
                      ],
                      "text": "Consider the relation R={(1,1),(2,1),(3,1),(4,2)}. The cardinality of ∣R∪R"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": null,
                            "color": null
                          }
                        },
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "2"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": null,
                            "color": null
                          }
                        }
                      ],
                      "text": "∪R"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": null,
                            "color": null
                          }
                        },
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "3"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": null,
                            "color": null
                          }
                        }
                      ],
                      "text": "∣| is 5."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "If R⊆S, then R′⊆S′, where R′ and S′ represent the complements of relations R and S, respectively."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "(c)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "on is a reflexive relation."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "is a member of power set of A and =."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If R⊆S, then S'R'"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "R={1,1, 2,1, 3,1, (4,2)}, R"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "superscript"
                  }
                ],
                "text": "2"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "={1,1, 2,1, 3,1, (4,1)}, R"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "superscript"
                  }
                ],
                "text": "3"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "={1,1, 2,1, 3,1, (4,1)}"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "So, R∪R"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "superscript"
                  }
                ],
                "text": "2"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "R"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "superscript"
                  }
                ],
                "text": "3"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": " has 5 elements"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T11:24:02.360Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b03c541afded9c7126943e",
      "questionId": 578,
      "displayId": null,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "If A={1, 2, 3, 4} then the number of possible equivalence relations on A is? _____ "
                }
              ]
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 15,
          "max": 15,
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "(15)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "A has to be divided into quotient partition set. There can be 4 partitions."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "1 block partition -> 1 way"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "2 block partition -> 4!/1!3!+4!/2!2!2!=7 ways"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "3 block partition -> 6 ways"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "4 block partition -> 1 way"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Total 15 ways possible."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T11:24:04.026Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b047a31afded9c7128e8f1",
      "questionId": 588,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "Which of the following are true? "
                }
              ]
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Anti-Symmetric and Irreflexive relation implies Asymmetric relation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Asymmetric relation implies Anti-symmetric and Irreflexive relation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Anti-symmetric relation implies Asymmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Asymmetric relation implies Anti-symmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [
          0,
          1,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "(a) (b) (d)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If we think with matrix representation of relation, Anti symmetric represents having the diagonal elements only and being irreflexive means not even diagonal elements. So, it is asymmetric. On the other hand, same is applicable reversely. So, it is biconditional statement."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Asymmetric↔Antisymmetric and Irreflexive"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "While, Asymmetric implies antisymmetric but the converse is not true."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Asymmetric →Antisymmetric"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T12:12:19.263Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b047a61afded9c7128e940",
      "questionId": 596,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "Consider a binary relation R on Z ✖ Z is defined as follows:   "
                },
                {
                  "type": "hardBreak",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ]
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "(a,b)R(c,d) iff a>c and b<d"
                },
                {
                  "type": "hardBreak",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ]
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ],
                  "text": "then which of the following is/are true:  "
                },
                {
                  "type": "hardBreak",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": null,
                        "color": null
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Irreflexive"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Asymmetric"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Anti Symmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle"
                        }
                      ],
                      "text": "Not transitive"
                    },
                    {
                      "type": "hardBreak"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [
          2,
          1,
          0
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "relation R doesn’t contain reflexive pairs because of strict condition so its irreflexive"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-08-28T12:12:22.443Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b55c3aac58433ddfca5418",
      "questionId": 613,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let f and g : R → R be defined on R as f: x"
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "superscript"
                    }
                  ],
                  "text": "2"
                },
                {
                  "type": "text",
                  "text": "+2, g: ( x² ) , find the value of"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "f "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "superscript"
                    }
                  ],
                  "text": "-1"
                },
                {
                  "type": "text",
                  "text": "g(9) ________________ (round off to 3 decimal places)"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 8.888,
          "max": 8.888,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "f: x"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "2"
              },
              {
                "type": "text",
                "text": "+2 so f"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "-1"
              },
              {
                "type": "text",
                "text": " = √x-2 and g = x²"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "g(9) = 81 and f "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "-1"
              },
              {
                "type": "text",
                "text": "(81) = √81-2 = √79 = 8.888"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T08:41:30.481Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b55c3aac58433ddfca542a",
      "questionId": 615,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What are the number of functions possible from A to B , where A={1,2,3,4,5} and B={4,5,7} is ?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 243,
          "max": 243,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Answer is 243"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The number of possible functions from set AA to set BB is calculated using the formula for the total number of functions: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Total number of functions=∣B∣"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "∣A∣"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "where:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "∣A∣=5 (number of elements in set A) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "∣B∣=3 (number of elements in set B) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Each element of A has 3 choices (any element of B), and there are 5 elements in A, so: 3"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "5"
              },
              {
                "type": "text",
                "text": "=243 "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Thus, the number of functions possible from A to B is 243."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T08:41:30.588Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b575e4ac58433ddfd925c9",
      "questionId": 636,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statement is true?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "∃ Euler cycle→∃ No Euler path"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "∃ Euler path→ ∃ No Euler cycle"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both (a) and (b)"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of them"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "(c)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "A. ∃ Euler Cycle →∃ No Euler Path"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If a graph has an Euler Cycle, then all vertices have even degrees."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If all vertices have even degrees, there cannot be exactly two vertices with odd degrees (which is required for an Euler Path)."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This statement is true. "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "B. ∃ Euler Path →∃ No Euler Cycle"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If a graph has an Euler Path, then exactly two vertices have odd degrees."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "If exactly two vertices have odd degrees, not all vertices have even degrees, so the graph cannot have an Euler Cycle."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This statement is true. "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "C. Both (a) and (b)"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Since both statements (a) and (b) are true, this statement is true. "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "D. None of them"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "This statement is false because both (a) and (b) are true."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Hence, the option (c) is correct."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T10:31:00.774Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b575e5ac58433ddfd925d9",
      "questionId": 640,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a complete graph K"
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "subscript"
                    }
                  ],
                  "text": "n"
                },
                {
                  "type": "text",
                  "text": " with n = 8193 vertices. What is the minimum number of edges that need to be removed to disconnect the graph?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 8192,
          "max": 8192,
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The edge connectivity of a complete graph K"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "subscript"
                  }
                ],
                "text": "n"
              },
              {
                "type": "text",
                "text": " is n - 1."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " If n = 8193, then the answer is: 8193 - 1 = 8192"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T10:31:01.003Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b575e5ac58433ddfd925e1",
      "questionId": 642,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a finite connected planar graph with n vertices with all of degree 4 and 10 regions. Find the number of vertices in the graph."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 8,
          "max": 8,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Answer is 8"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Step 1: Recall Euler's FormulaFor a connected planar graph, Euler's formula states: n−e+r=2, where-> n = number of vertices,-> e = number of edges,-> r = number of regions (including the outer region). Step 2: Use the Given Information-> The graph is connected and planar.-> All vertices have degree 4.-> The number of regions r=10r=10. Step 3: Relate Vertices and Edges-> In any graph, the sum of the degrees of all vertices is equal to twice the number of edges (Handshaking Lemma): ∑degrees=2e. -> Since all vertices have degree 4: 4n=2e ⟹ e=2n. Step 4: Substitute into Euler's FormulaSubstitute e=2ne=2n and r=10r=10 into Euler's formula: => n−e+r=2,=> n−2n+10=2,=> −n+10=2,=> −n=−8,=> n=8."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Step 5: Verify the Solution Number of vertices n=8n=8. Number of edges e=2n=16e=2n=16. Number of regions r=10r=10. Substituting into Euler's formula: 8−16+10=2, which is correct."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T10:31:01.055Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b57d3bac58433ddfde45fe",
      "questionId": 649,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a graph G to be connected planar graph with 10 vertices. Which of the following can be number of edges in graph G order to be G be connected?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "22"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "23"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "24"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "25"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "(a) (b) (c)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 1: Euler's Formula"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "For a connected planar graph: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "n−e+f=2, "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "where:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "n = number of vertices,"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "e = number of edges,"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "f = number of faces. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 2: Maximum Number of Edges in a Planar Graph"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A planar graph must satisfy: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "e≤3n−6."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "For n=10: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "e≤3(10)−6=24."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Thus, the maximum number of edges in a connected planar graph with 10 vertices is 24."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 3: Minimum Number of Edges in a Connected Graph"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A connected graph must have at least n−1 edges. For n=10: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "e≥10−1=9. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 4: Valid Range of Edges"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Combining the above results, the number of edges ee must satisfy: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "9≤e≤24. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 5: Evaluate the Choices"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A. 22: This is within the valid range."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "B. 23: This is within the valid range."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C. 24: This is the maximum number of edges allowed for a planar graph."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "D. 25: This exceeds the maximum number of edges allowed for a planar graph. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 6: Final Answer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "The valid number of edges is: A,B,C"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T11:02:19.120Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b58c82ac58433ddfe64995",
      "questionId": 664,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Every subgroup of cyclic group is itself a"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Abelian Group"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Finite Group"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Cyclic Group"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(c)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Every subgroup of a cyclic group is cyclic too."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:07:30.816Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b58c83ac58433ddfe649c2",
      "questionId": 668,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let H be the cyclic group of order 20, having a as its generator. Then the order of a8 will be __________"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 5,
          "max": 5,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "we have to find O(a"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "8"
              },
              {
                "type": "text",
                "text": ")"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "To find the smallest x such that O(a"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "8)x"
              },
              {
                "type": "text",
                "text": " = e"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "20"
              },
              {
                "type": "text",
                "text": " = e[O(G)=20]"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "40 "
              },
              {
                "type": "text",
                "text": "= e"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "8x"
              },
              {
                "type": "text",
                "text": " = A"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "40"
              },
              {
                "type": "text",
                "text": " => x=5"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:07:31.702Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b58c83ac58433ddfe649d0",
      "questionId": 669,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A group (G, *) where G = {1,2,3,4,... 9, 10) and '*' is a multiplicative prime modulo (x"
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "subscript"
                    }
                  ],
                  "text": "11"
                },
                {
                  "type": "text",
                  "text": ") then what will be the inverse of element '2'."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 6,
          "max": 6,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Identity element 'e' will be 1."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For inverse a*a⁻¹ =  e (identity)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "2*2⁻¹ = 1"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "given: '*' is a multiplicative prime modulo (x"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "subscript"
                  }
                ],
                "text": "11"
              },
              {
                "type": "text",
                "text": "). So,"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(2 x a) mod 11 = 1"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "for a = 6 it will be possible."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Therefore, 2⁻¹ = 6"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:07:31.776Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b58c84ac58433ddfe649f2",
      "questionId": 676,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let H be a group with 42 elements. Let K be a subgroup of H. It is known that K≠H and that the size of K is at least 15. The size of K is _____"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 21,
          "max": 21,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(21)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Lagrange’s theorem specifies: Order of subgroup divides the order of a group."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Order of group = 42. Now, K is a subgroup of H."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "So, divisor of 42 = 1, 2, 3, 6, 7, 14, 21, 42"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "K is at least 15, so size of K is 21."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:07:32.395Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b594b6ac58433ddfeb587b",
      "questionId": 685,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is false about Cyclic Groups"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "If order of a Cyclic Group (G, *) is 15, then the number of generators are 9"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Every subgroup of a Cyclic Group is Cyclic"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A cyclic group of order N has a unique subgroup of every divisor of N"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "If an element a is generator in a Cyclic Group, then a⁻¹ is not a generator"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(A) If n is order of cyclic group then the number of generators possible is equal to prime numbers till n. 15 = 5 x 3 Number of primes = 4 × 2 = 8   .. False"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(B) Every subgroup of a Cyclic Group is cyclic but the generators need not be same… True"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(C) The statement is true based on property……True"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(D) "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "var(--rx-text-color)"
                    }
                  }
                ],
                "text": "In a cyclic group, if a is a generator, then a"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "superscript"
                  }
                ],
                "text": "−1"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "var(--rx-text-color)"
                    }
                  }
                ],
                "text": " is also a generator, as both generate the same set of elements."
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": ".. False"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": " "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " "
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:42:30.738Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b594b6ac58433ddfeb5891",
      "questionId": 686,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "There is a group (G, *) order of the group is 11, and another group (P, *) order of the group is 17. Let there be another non-empty group H formed by the intersection of group G and P. Then what will be the possible order of H?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "11"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "1"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "17"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "28"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "According to Lagrange order of the subgroup should be divisible by the order of the group. The intersection of two groups is itself a subgroup of each of the original groups. This is because it inherits closure, identity, and inverses from each group."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "..O (H) must be divisible by O(G) & O(P)."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "GCD of 17 and 11 is 1."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "O (G∩P) = O(H) = 1"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " "
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-01T12:42:30.807Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69661b0c8ceb831bd734f",
      "questionId": 720,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The smallest minimally functionally complete set is"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{⋀,⋁,~}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{⋀,~}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{↑}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{⋁,~}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(c) The smallest minimally functionally complete set is C. {↑} (NAND). It’s a single operator that can express all Boolean functions, and removing it leaves an incomplete set."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:01:53.173Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b50b0c8ceb831bebf53",
      "questionId": 723,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Assume among 75 childrens who went to a water park, where they could ride on merry-ground, roller coaster and ferris wheel. It is known that 20 of them had taken all 3 rides and 55 has taken atleast 2 of the 3 rides. Each ride costs rs 0.50 and total receipt park is rs 70, how many number of childrens who did not takes a ride ___________"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 10,
          "max": 10,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph"
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Given Data:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Total children = 75 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Children who took all three rides = 20 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Children who took at least two rides = 55 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Each ride costs ₹0.50 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Total revenue from rides = ₹70 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 1: Find Total Number of Rides"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Let y be the total number of rides taken by all children. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Since each ride costs ₹0.50, the total number of rides is: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "y=70/0.50=140"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 2: Define Contributions"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "-> 20 children took all 3 rides, so their total rides = 20×3=60"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "-> 55 children took at least 2 rides "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "       -> We already accounted for the 20 children who took 3 rides. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "       -> This means 35 children took exactly 2 rides, so their total rides = 35×2=70. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "        Total rides from at least 2 rides group=60+70=130"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 3: Determine Rides from Children Who Took Exactly 1 Ride"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "    -> Since the total rides are 140 and we already accounted for 130 rides from children who took at least 2 rides, the remaining 10 rides must be from children who             took exactly one ride. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "    -> Let n"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "subscript"
                  }
                ],
                "text": "1"
              },
              {
                "type": "text",
                "text": "​ be the number of children who took exactly 1 ride, then: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "            n"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "subscript"
                  }
                ],
                "text": "1"
              },
              {
                "type": "text",
                "text": "=10/1=10"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 4: Find Children Who Took No Rides"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Total children = 75 "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Children who took at least one ride = 55+10=65"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So, the number of children who did not take any ride: x=75−65=10"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Final Answer:"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "10 children did not take any ride."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:56.790Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b50b0c8ceb831bebf5b",
      "questionId": 725,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a relation R between vertices in an undirected graph two vertices v and w are connected iff there is path between them then which of the following properties is/are satisfied by given relation R?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Symmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Asymmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Irreflexive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A. Symmetric"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A relation is symmetric if vRw implies wRv."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "In an undirected graph, if there is a path from v to w, there is also a path from w to v (since edges are bidirectional)."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Conclusion: R is symmetric. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "B. Asymmetric"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A relation is asymmetric if vRw implies ¬(wRv)."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "In an undirected graph, if vRw, then wRv (as explained above). Thus, R cannot be asymmetric."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Conclusion: R is not asymmetric. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C. Transitive"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A relation is transitive if vRw and wRu imply vRu."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "In an undirected graph, if there is a path from v to w and a path from w to u, then there is a path from v to u (by concatenating the paths)."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Conclusion: R is transitive. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "D. Irreflexive"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A relation is irreflexive if ¬(vRv) for all v."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "In an undirected graph, every vertex v has a path to itself (the trivial path of length 0). Thus, vRv is always true."
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Conclusion: R is not irreflexive."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:56.868Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b50b0c8ceb831bebf5f",
      "questionId": 726,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider an equivalence relation R on the positive integers {2,3,4…………20} define as mRn iff the largest prime divisor of m is same as the largest prime divisor of n the number of equivalence classes of R are there _____________"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 8,
          "max": 8,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "equivalence class contains the elements which connect to any of element of same class and doesn’t connect to any element outside the classmRn iff (largest prime divisor of m = largest prime divisor of n)1) 2 = {2,4,8,16}2) 3 = {3,6,9,18}3) 5 ={5,10,15,20}4) 7 = {7,14}5) 11 = {11}6) 13 = {13}7) 17 = {17}8) 19 = {19}"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:56.945Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b51b0c8ceb831bebf77",
      "questionId": 731,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The total number of onto functions possible if f: A→B and |A| = 5 and |B| = 3 is :"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 150,
          "max": 150,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The formula to find number of onto function is Put m = 5 and n = 3 and expand to get:                                                                 = ³C0 (3 - 0)⁵ - ³C1 (3 - 1)⁵ + ³C2 (3 - 2)⁵ - ³C3 (3 - 3)⁵ = 1 . 3⁵ - 3 . 2⁵ + 3 . 1⁵ - 0 = 150"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:57.784Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b52b0c8ceb831bebf9f",
      "questionId": 739,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following options is/are true?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Some k-regular graph can be complete graph."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Some K- regular graph can be complete graph"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "In a simple connected graph with more than 2 vertices, it must have at least 2 vertices with same degree."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A graph  G is bipartite if and only has even cycle."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The degree sum of odd degree vertices must be odd."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A and B are correct "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C and D are incorrect"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Option A (True) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A k-regular graph where k=n−1k=n−1 is a complete graph because every vertex is connected to all others. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Option B"
              },
              {
                "type": "text",
                "text": " (True - Follows Havel-Hakimi Theorem & Pigeonhole Principle) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "In a simple connected graph with nn vertices, at least two vertices must have the same degree because assigning unique degrees while maintaining connectivity is impossible. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Option C"
              },
              {
                "type": "text",
                "text": " (False - Incorrect claim about bipartite graphs) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Bipartite graphs can have even cycles, but they don't necessarily need to. The correct statement: "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "A graph is bipartite if and only if it has no odd-length cycles. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": " Option D"
              },
              {
                "type": "text",
                "text": " (False - Degree sum of odd-degree vertices is always even) "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Handshaking Lemma states that the sum of all vertex degrees in a graph is even. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "The sum of degrees of odd-degree vertices must also be even. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Final Answer: "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "A and B are correct. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C and D are incorrect."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:58.412Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b53b0c8ceb831bebfb1",
      "questionId": 743,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following algebraic structure form a group?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A: The set of integers under Subtraction"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "B: The set of irrational numbers under multiplication"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "C: The set of real numbers under subtraction"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "D: The set of real number under multiplication"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "How many statements are true _________"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "A: The set of integers under Subtraction"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "1.) Closure: Subtraction of two integers is an integer. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "2.) Associativity: Subtraction is not associative. For example, (a−b)−c≠a−(b−c)(a−b)−c=a−(b−c). Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "3.) Identity Element: There is no identity element ee such that a−e=aa−e=a for all aa. Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "4.) Inverse Element: Not applicable since there is no identity element."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This structure is not a group."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "B: The set of irrational numbers under Multiplication"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "1.) Closure: The product of two irrational numbers is not always irrational. For example, 2×2=2, which is rational. Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "2.) Associativity: Multiplication is associative. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "3.) Identity Element: The identity element for multiplication is 1, but 1 is not irrational. Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "4.) Inverse Element: Not applicable since there is no identity element."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This structure is not a group."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "C: The set of real numbers under Subtraction"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "1.) Closure: Subtraction of two real numbers is a real number. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "2.) Associativity: Subtraction is not associative. For example, (a−b)−c≠a−(b−c)(a−b)−c=a−(b−c). Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "3.) Identity Element: There is no identity element ee such that a−e=aa−e=a for all aa. Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "4.) Inverse Element: Not applicable since there is no identity element."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This structure is not a group."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "D: The set of real numbers under Multiplication"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "1.) Closure: Multiplication of two real numbers is a real number. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "2.) Associativity: Multiplication is associative. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "3.) Identity Element: The identity element is 1, since a×1=aa×1=a for all aa. Satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "4.) Inverse Element: Every non-zero real number aa has an inverse 1aa1​. However, 0 does not have an inverse. Not satisfied."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "Conclusion: This structure is not a group because 0 does not have an inverse."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "Step 5: Final Answer"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ],
                "text": "None of the given algebraic structures form a group. "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "Thus, the number of true statements is: 0"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": "rgb(51, 51, 51)"
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:59.164Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b53b0c8ceb831bebfd2",
      "questionId": 750,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let G be a loop-free undirected graph with n vertices. If G has 56 edges and GC has 80 edges, then what is the value of n?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 17,
          "max": 17,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Number of edges in G + number of edges in GC = n (n-1) /2"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "56 + 80 = n(n-1)/2"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " n=17"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:22:59.793Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b69b54b0c8ceb831bebfe6",
      "questionId": 754,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following statements:                          "
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "P1: Virat kohli gets out before fifty only if jasprit bumrah come out to bat."
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "P2: Jasprit bumrah won’t comes out to bat if lasith malinga is not called to bowl."
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "P3: Virat kohli got out after fifty."
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "Which of the following does not follow from P1, P2 and P3 :"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Lasith malinga is called to bowl"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Jasprit bumrah won’t comes out to bat"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Virat kohli got out before fifty"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(A, B, C)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A. Lasith Malinga is called to bowl:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "This does not follow from the given statements. There is no direct evidence that Lasith Malinga is called to bowl. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "B. Jasprit Bumrah won’t come out to bat:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "This does not follow from the given statements. There is no direct evidence that Jasprit Bumrah won’t come out to bat. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C. Virat Kohli got out before fifty:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "This does not follow from the given statements. In fact, P3 explicitly states that Virat Kohli got out after fifty. "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "D. None of the above:"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "This is incorrect because A, B, and C do not follow from the given statements."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T07:23:00.222Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b6d6649d0eba9da9af427a",
      "questionId": 756,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "  Match the following Lists        (MCQ)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "                   List-I                                                                                      List-II"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "A. There are at most two apples.                               1. ∀x∀y∀z((Apple(x) Λ Apple(y) Λ Apple(z)) → (x =y V x=z V y = z))"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "B. There are exactly two apples.                                2. ∀x∀y((Apple(x) Λ Apple(y)) → (x = y V y = x))"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "C. There is at most one apple.                                    3. ∃x∃y(Apple(x) Λ Apple(y) Λ (x ≠ y) Λ ∀z(Apple(z) → ((z= x) V (z = y))))"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "D. There is exactly one apple.                                     4. ∃x(Apple(x) Λ (Apple(y) → (x = y)))"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "Codes:"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "        A    B   C   D"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "(a)    1     2    3   4"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "(b)    3     2    1   4"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "(c)    1     3    2   4"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "(d)    3     1    2   4"
                }
              ]
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "a"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "b"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "c"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "d"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Apple(p): p is an apple."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "1) For all x, y & z, if (x is an apple and y is an apple and z is an apple), then (either x is same as y or x is same as z or y is same as z).It means we have at most 2 apples."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "2) For all x & y if (x is an apple and y is an apple) then (either x is same as y or y is same as x).It means we have at most 1 apple. here x & y need not to apple always but \"if\" both of them are apples then they are same apples, it says that we may or may not have apples but if we have then we can not have more than 1 apple."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "3) There exists an x & y such that x is an apple and y is an apple and x & y are different apples and for every z if z is an apple then either z is same as x or z is same as y. It means we have exactly 2 apples."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "4) There exists an x such that x is an apple and for every y if y is an apple then x & y are same. It means we have exactly 1 apple."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T11:35:00.710Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b6e405be18fd2059d24b14",
      "questionId": 792,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the given relations R1 and R2 on the power set of P(A) of set A as:    "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "R1: ∀a,b ∊ P(A) {(a,b) ∊ R ⇔ a በ b ≠ Φ}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "R2: ∀a,b ∊ P(A) {(a,b) ∊ R ⇔ a ሀ b = a}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is/are true:"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R1 is Reflexive and Symmetric but not Transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R1 is Equivalence and R2 is Reflexive and Symmetric but not Transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R2 is Equivalence but R1 is Partial relation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R2 is Not Symmetric but Reflexive and Transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "let A={a,b,c} now P(A)={{Φ},{a},{b},{c},{a,b},{a,c},{b,c},{a,b,c}}"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "R1: contain all reflexive pairs and all pairs symmetric pairs also but can’t contain transitive pair e.g: ({a},{a,b}), ({a,b},{b,c}) are present but doesn’t contain ({b,c},{a})"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "R2: contain all reflexive pairs and all pairs transitive pairs also but can’t contain symmetric pair e.g: ({a,b},{a}) is present but doesn’t contain ({a},{a,b})"
              }
            ]
          },
          {
            "type": "paragraph"
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T12:33:09.081Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b6e405be18fd2059d24b63",
      "questionId": 796,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Set A = {a, b, c}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A relation ‘R’ is defined on set A = {a, b, c} as"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "R = {(a, b), (c,c),(b, c), (a, c), (c, d), (a, d), (a, a), (b, b)}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Choose the correct option about ‘R’."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R is irreflexive, reflexive, not transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R is irreflexive, symmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R is irreflexive, not symmetric"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R is not irreflexive, reflexive, not transitive"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "‘R’ is not irreflexive, because xRx is present i.e., (a, a)."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "‘R’ is reflexive, because (x, x) is present ∀x∈Ai.e.,(a,a),(b,b),"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(c, c) is present."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "‘R’ is not symmetric, because (b, c) (c, d) there is no (b, d)."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-02T12:33:09.430Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b80f9c57eac1577bf29735",
      "questionId": 820,
      "displayId": null,
      "type": "TRUE_FALSE",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": "12pt",
                        "color": "rgb(0, 0, 0)"
                      }
                    }
                  ],
                  "text": "If A =(1,2,3} (MCQ)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": "12pt",
                        "color": "rgb(0, 0, 0)"
                      }
                    }
                  ],
                  "text": "Then Φ ⊆ A "
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "correct": true
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "rgb(0, 0, 0)"
                    }
                  }
                ],
                "text": "Φ is subset of any set hence true"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-03T09:51:24.884Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b8241157eac1577bf6b77a",
      "questionId": 827,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following are types of relationships that can exist between tables in a relational database?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "One-to-One"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "One-to-Many"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Many-to-Many"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Hierarchical"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(A) True: In a one-to-one relationship, a single tuple in one table is associated with a single tuple in another table."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(B) True: In a one-to-many relationship, a single tuple in one table can be associated with multiple tuples in another table."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(C) True: In a many-to-many relationship, multiple tuples in one table can be associated with multiple tuples in another table."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(D) False: Hierarchical is not a type of relationship in relational databases. It refers to a different type of database model (hierarchical database model)."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-03T11:18:41.629Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b8241157eac1577bf6b77e",
      "questionId": 828,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "In relational database management systems, which of the following statements are true?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A relation (table) must have a unique primary key."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A foreign key can reference attributes in another table."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The domain of an attribute is the set of possible values it can take."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A candidate key can include additional non-key attributes to ensure uniqueness."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(A) True: Every table must have a unique primary key."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(B) True: Foreign keys reference primary keys or unique keys in other tables."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(C) True: The domain defines the range of permissible values for an attribute."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": "black"
                    }
                  }
                ],
                "text": "(D) False: A candidate key is a minimal set of attributes that uniquely identifies a tuple; it cannot include additional non-key attributes."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-03T11:18:41.720Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b8241157eac1577bf6b786",
      "questionId": 830,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A database table Employees contains 20,000 rows, and each row requires 150 bytes of storage. The table is stored with a block size of 4 KB (4096 bytes). How many blocks are needed to store the entire table?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 733,
          "max": 733,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Size of one row = 150 bytes"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Total size of the table = 20,000 rows * 150 bytes = 3,000,000 bytes"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Number of blocks required = Total size / Block size"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Number of blocks=3,000,000/4096≈732.42"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Rounding up, the number of blocks required = 733"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-03T11:18:41.856Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b8292057eac1577bf78840",
      "questionId": 834,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "textStyle",
                      "attrs": {
                        "fontSize": "16px",
                        "color": "rgb(43, 43, 58)"
                      }
                    }
                  ],
                  "text": "Which of the following statements are true about relational databases?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ],
                      "text": "A relation is a set of tuples."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ],
                      "text": "The primary key of a relation must be unique for each tuple."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ],
                      "text": "A relation can have duplicate tuples if the primary key is not defined."
                    },
                    {
                      "type": "hardBreak",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ]
                    },
                    {
                      "type": "hardBreak",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "textStyle",
                          "attrs": {
                            "fontSize": "12pt",
                            "color": ""
                          }
                        }
                      ],
                      "text": "Foreign keys are used to uniquely identify tuples within a relation."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [
          0,
          1
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": ""
                    }
                  }
                ],
                "text": "(A) True: In relational database terminology, a relation is essentially a table, and a table consists of rows (tuples) and columns (attributes). Each tuple represents a record in the relation."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": ""
                    }
                  }
                ],
                "text": "(B) True: The primary key in a relational database uniquely identifies each tuple within the relation. It ensures that no two tuples have the same primary key value."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": ""
                    }
                  }
                ],
                "text": "(C) False: By definition, a relation in a relational database should not have duplicate tuples, regardless of whether a primary key is defined. The concept of a relation inherently requires that all tuples be unique."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "12pt",
                      "color": ""
                    }
                  }
                ],
                "text": "(D) False: Foreign keys are used to establish and enforce relationships between different relations (tables) in a database. They refer to primary keys in other relations to maintain referential integrity but do not uniquely identify tuples within their own relation."
              }
            ]
          },
          {
            "type": "paragraph"
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-03T11:40:16.104Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b92dd5b9e39d83f69b36cc",
      "questionId": 851,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following statements and chose the correct option(s): "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S1: The conceptual schema insulates users from the changes in external schema. This property is referred to as logical data independence "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S2: The physical schema insulates users from the changes in the logical structure of data or changes in the choice of relation stored. This property is called Physical data independence."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S1 is true"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S2 is true"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S1 is false"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S2 is false"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(c) (d)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "S1: The conceptual schema insulates users from the changes in external schema. This property is referred to as logical data independence."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "This statement is NOT true, since the conceptual schema insulates users from changes in physical storage. This property is referred to as physical data independence."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "S2: The physical schema insulates users from the changes in the logical structure of data or changes in the choice of relation stored. This property is called logical data independence."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-04T06:12:37.771Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b94469fa2322be59df66a1",
      "questionId": 898,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is a candidate key of the relation R(ABCDEF), {AB->C, C->D, CD->BE, DE->F, EF->A}?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "AB"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "EFB"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "BDE"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "BCE"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "✅ Option A: "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "AB"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "AB → C"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "C → D"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "CD → BE"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "DE → F"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "EF → A"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "AB⁺ = {A, B, C, D, E, F} ⇒ Superkey"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Minimal? Yes. ✅"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "✅ "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "AB is a candidate key"
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "✅ Option B: "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "EFB"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "EF → A"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "EFB → A, B, E, F"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Now:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "A + B ⇒ C"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "C ⇒ D"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "CD ⇒ BE"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "DE ⇒ F"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "EFB⁺ = {E, F, B, A, C, D} = all attributes ✅"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Minimal? Yes ✅"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "✅ "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "EFB is a candidate key"
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "✅ Option C: "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "BDE"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Try BDE⁺"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Nothing directly, but"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Try B + D → try combining with E"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "D + E → F"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "EF → A"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "A + B ⇒ C"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "C ⇒ D"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "CD ⇒ BE"
                      },
                      {
                        "type": "hardBreak"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Eventually BDE⁺ = {B, D, E, F, A, C} = all ✅"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "Minimal? Yes ✅"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "✅ "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "BDE is a candidate key"
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "✅ Option D: "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "BCE"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "None as BDE is a CK and C->D then C can also be a part of CK or become a prime attribute"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Hence BCE is a candidate key"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-04T07:48:57.262Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b9446afa2322be59df66cb",
      "questionId": 904,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider R={A,B,C,D,E,F,G} be a relation with following functional dependencies:        "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "F.D = {CF→A, E→B, B→FG, EG→C}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is/are can be the primary key for relation R :"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{D,E}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{F,E,D}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E,G,D}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{C,E,F}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "a. Closure: {D,E,B,F,G,C,A}. This includes all attributes in R, so"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "{D,E} is a candidate key . Thus,"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "{D,E} can be a primary key."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "b. Closure: {F,E,D,B,G,C,A}. This includes all attributes in R, so"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "{F,E,D} is a super key but not candidate key."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "c. Closure:{E,G,D,B,F,C,A}. This includes all attributes in R, so"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "{E,G,D} is a super key but not candidate key."
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "d. Closure:{C,E,F,B,G,A}. This does not include D, so {C,E,F} is not a super key."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-04T07:48:58.272Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b9446afa2322be59df66d2",
      "questionId": 905,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the relation and following functional dependencies: "
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "R(id,name,date,rollno,class)"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "FD: {id→name, rollno,id→(class,date) , class→date,class→id, name→id, name→rollno}"
                },
                {
                  "type": "hardBreak"
                },
                {
                  "type": "text",
                  "text": "Which of the following is the canonical cover of FD?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{id→name, rollno,id→class, class→date, class→id, name→id, name→rollno}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{id→name, rollno,id→(class,date), class→date, class→id, name→rollno}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{id→name, rollno,→(class,date), class→date, name→id, name→rollno}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{id→name, class→id, name→id, name→rollno}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "There is mainly three type of redundancy may be present in a set of FDs "
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "1: complete production may be redundant"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "2: one or more then one attribute may be redundant on R.H.S of production"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "3: one or more then one attribute may be redundant on L.H.S of production"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "Here, if"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": " class→date"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": ",  there is no need of "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "date "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "along with "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "class "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": "hence, in FD"
              },
              {
                "type": "hardBreak",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ]
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": " id→(class,date)"
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  }
                ],
                "text": " , date is the extraneous attribute. The remaining FD will be "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "textStyle",
                    "attrs": {
                      "fontSize": "",
                      "color": ""
                    }
                  },
                  {
                    "type": "bold"
                  }
                ],
                "text": "id→ class."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-04T07:48:58.446Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68b94b6efa2322be59e0af2d",
      "questionId": 922,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following relational schema F(PQRST) with functional dependencies:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "{PQ→R, S->T, T->P, S-> Q);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The number of additional relations are required to convert it into lossless join & Dependency preserving"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "2NF Decomposition is ?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "R(PQRST) (PQ, R-S, S-T, T→P, S->Q;"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Candidate key = [S]"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Prime attribute = {S}"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "There is no partial dependency as the CK is a simple CK hence the relation is already in 2NF"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "So, '0' (No more) additional relation required to decompose into 2NF."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-04T08:18:54.994Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68bacc08b0d0fc0ef4497f39",
      "questionId": 945,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statements about fourth normal form (4NF) is true?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A relation in 4NF must be in BCNF and should not have any non-trivial MVDs."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A relation in 4NF must be in 3NF and should have only trivial MVDs."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A relation in 4NF must be in 2NF and should not have any trivial MVDs."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A relation in 4NF must be in BCNF and can have non-trivial MVDs."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(A) True. For a relation to be in 4NF, it must first be in BCNF, and it should not have any non-trivial multivalued dependencies (MVDs)."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(B) False. Being in 3NF is not sufficient for 4NF. The relation must also be in BCNF."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(C) False. A relation in 4NF must be in BCNF, not just 2NF."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(D) False. A relation in 4NF should not have any non-trivial MVDs"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-05T11:39:52.920Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68bec6978dcce6c5f5047b06",
      "questionId": 962,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Relation: x=(d,b,c,f,g,h)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Functional dependencies: d→bc,g→hd "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Decomposed into: "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "a=(d,b,c) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "e=(d,f,g,h) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is correct?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Lossy and dependency preservation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Lossless and dependency preservation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Lossless and no dependency preservation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Lossy and not dependency preservation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Step 1: Check Dependency Preservation"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Given FDs: d→bc"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Decomposition:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "                        Relation a(d,b,c): Can enforce d→bc."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "                        Relation e(d,f,g,h): Can enforce g→hd. "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Since both FDs can be enforced in their respective relations, the decomposition preserves dependencies."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Step 2: Check Lossless Join"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A decomposition is lossless if the common attributes between relations form a superkey in at least one of the decomposed relations."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Common attribute: d."
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "d is a superkey in a (because d→bc). "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Thus, the decomposition is lossless."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-08T12:05:43.750Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68bece94ad7bb3935ea2ce3f",
      "questionId": 971,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The clustered index is type of:"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "sparse index"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "multi level index"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "both B and D"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "dense index"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          3
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "cluster index follows the property of both sparse and dense index"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "     ∴ primary index is always of sparse index type"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "     ∴ secondary index is of dense index type"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-08T12:39:48.236Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68bece94ad7bb3935ea2ce43",
      "questionId": 972,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statements are true:"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "for queries like σ"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "A"
                    },
                    {
                      "type": "text",
                      "text": "="
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": "(R) hashing is better than B"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "+"
                    },
                    {
                      "type": "text",
                      "text": " tree"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "for queries like σ"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "A"
                    },
                    {
                      "type": "text",
                      "text": ">"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": "(R) hashing is better than B"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "+"
                    },
                    {
                      "type": "text",
                      "text": " tree"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "B tree takes less time for a queries like σ"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "A"
                    },
                    {
                      "type": "text",
                      "text": "="
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "subscript"
                        }
                      ],
                      "text": "a"
                    },
                    {
                      "type": "text",
                      "text": "(R) than B"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "+"
                    },
                    {
                      "type": "text",
                      "text": " tree"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "leaf node of a B"
                    },
                    {
                      "type": "text",
                      "marks": [
                        {
                          "type": "superscript"
                        }
                      ],
                      "text": "+ "
                    },
                    {
                      "type": "text",
                      "text": "tree contain equal no of record pointer and block pointers"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: for comparison queries hashing is better than B+ tree because in B+ tree we need to traverse whole tree"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: for range queries B+ tree is better because in B+ tree nodes are interconnected so range queries work easily"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "C: for comparison queries B tree is better then B+ tree because in B+ tree we need to traverse whole tree but in B tree we need to traverse till the element."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "D: leaf node of a B+ tree contain equal n no of record pointers and 1 block pointer"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-08T12:39:48.312Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68bece95ad7bb3935ea2ce57",
      "questionId": 977,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a unordered file with 50000 records with record size of 200 bytes stored with a spanned record organization. We will assume that no system related information is stored within a block suppose that we construct a single level, secondary index for file where search key field is 10 bytes and block pointer is 4 bytes. Assume that hard disc block size is 2048 bytes. How many block would be needed to store index file?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 342,
          "max": 342,
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Number of index blocks = ceil ( number of records * (key field + block pointer) / block size )"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Number of index  = ceil ( 50,000 * (10+4) / 2048  ) = 342"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-08T12:39:49.111Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c7dc906723e94f726ae7e6",
      "questionId": 985,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a B+  tree in which the maximum number of keys in a node is 9. The minimum number of keys in any non-root node is ______."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 4,
          "max": 4,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "no of children is 10"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "minimum no. of keys =n/2-1=10/2-1=5-1=4"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T09:29:53.007Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c7eb2109e1e24ed230debb",
      "questionId": 1019,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the join of a relation R1 with R2. If R1 has 16 tuples and R2 has 4 tuples then the minimum size of the join is"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 0,
          "max": 0,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The minimum size of the join occurs when no tuples in R1 able to combine with any tuples of R2."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T10:32:01.245Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c7fcc36723e94f72f078e6",
      "questionId": 1035,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Given a table Sales with columns SalesID, ProductID, SaleDate, and SaleAmount, which SQL query retrieves the average sale amount for each month in the year 2024?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT MONTH(SaleDate), AVG(SaleAmount) FROM Sales WHERE YEAR(SaleDate) = 2024 GROUP BY MONTH(SaleDate);"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT AVG(SaleAmount) FROM Sales WHERE YEAR(SaleDate) = 2024;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT SaleDate, AVG(SaleAmount) FROM Sales WHERE YEAR(SaleDate) = 2024;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT MONTH(SaleDate), SUM(SaleAmount) FROM Sales WHERE YEAR(SaleDate) = 2024 GROUP BY SaleDate;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "This query groups the sales data by month and calculates the average sale amount for each month in 2024"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T11:47:15.990Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c80fd3aecfefefb3d13577",
      "questionId": 1045,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the relation"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Employee (SSN, Ename, Salary, Dno)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Q: SELECT Ename FROM Employee E1 WHERE NOT EXISTS ( SELECT Salary from Employee E2 WHERE Dno = 5 and E1. SALARY < = E2. SALARY)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "‘Q’ gives the names of employees whose salary is"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Greater than some employee’s salary in Dno 5"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Greater than all employee’s salary in Dno 5"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Less than all employee’s salary in Dno 5"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Less than some employee’s salary in Dno 5"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The inner query gives the salary of all employees whose salary is greater than given employee salary and is working in department no 5."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "But we are displaying the given employee name if there does not exist such salary. It means we are displaying the employee name if his/her salary is greater than all other employees’ salary who are working in department number 5."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "So, the answer is option (b)."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T13:08:35.880Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c80fd4aecfefefb3d1358c",
      "questionId": 1049,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Given relations R(A, B) and S (C, D), the result of"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Select DISTINCT A,B FROM R,S is guaranteed to be same as R provided"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R has no duplicates and S is non-empty"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R and S have no duplicates"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S has no duplicates and R is non-empty"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "R and S have the same number of tuples"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The query selects all attributes of R (since we are selecting A, B). Since we have distinct in query, result can be equal to R only if R does not have duplicates."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "If we do not give any attribute on which we want to join two tables, then the queries like above become equivalent to Cartesian product. Cartesian product of two sets will be empty if any of the two sets is empty. So, S should have atleast one record to get all rows of R. So, answer is option (a)."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T13:08:36.361Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c80fd4aecfefefb3d1359a",
      "questionId": 1051,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following relational schema:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "employee(empId,empName,empDept)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "customer(custId,custName,salesRepId,rating)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "salesRepId is a foreign key referring to empId of the employee relation. Assume that each employee makes a sale to at least one customer."
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SELECT empName FROM employee E WHERE NOT EXISTS (SELECT custId FROM customer C WHERE C.salesRepId = E.empId AND C.rating <> ’GOOD’);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What does the following query return?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Names of all employees with at least one of their customers having a ‘GOOD’ rating."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Names of all the employees with at most one of their customers having a ‘GOOD’ rating."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Names of all the employees with none of their customers having a ‘GOOD’ rating."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Names of all the employees with all their customers having a ‘GOOD’ rating."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Inner query returns all the customer id’s who does not have a ‘good’ rating. In the outer query, NOT EXISTS considers all the employees whose customer id’s are not returned from the inner query. This actually returns the names of all employees with all their customers having a ‘good’ rating"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T13:08:36.591Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c80fd4aecfefefb3d1359e",
      "questionId": 1052,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider two relational schemas Project (Pnumber, Pname, Dno) and works_on(eid, pno, hours) with primary keys as underlined. Choose an SQL query to retrieve all project numbers in descending order in which more than 3 employees are working?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT W.Pno, count(*) as No_employees_working FROM Project P, Works_on W ON W.pno= P. Pnumber  GROUP BY eid HAVING Count(*) >3 ORDER BY Pno DESC;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT W.Pno, count(*) as No_employees_working FROM Project P, Works_on W ON W.pno= P. Pnumber GROUP BY Pno HAVING Count(*) >3 ORDER BY Pno DESC;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT W.Pno, count(*) as No_employees_working FROM Project P, Works_on W ON W.pno= P. Pnumber GROUP BY Pno, eid HAVING Count(*) >3 ORDER BY Pno DESC;"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Here we have to select all the project numbers in descending order such that more than 3 employees are working in that project."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For this we have performed join on PROJCET table and WORKS_ON table with join condition as P.Pnumber = W.pno and we grouped the result by Pno and apply condition on the groups obtained as count(*) >3 to retrieve the projects in which more than 3 employees are working."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-15T13:08:36.688Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fbb",
      "questionId": 1056,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following tuple relational calculus expression(s) is/are equivalent to ∃t ∈ Student(S(t))?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "¬∀t ∈ Student (¬S(t))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "¬∀t ∈ Student (S(t))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "∀t !∈ Student (¬S(t))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "∀t !∈ Student (S(t))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution: (a)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The given statement means for there exist a tuple from student, S is true."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(i) is correct :All tuples do not exist in student where S is not true."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(ii) is not correct as it as saying all tuples does not exist in student where S is true"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(iii) is not correct as it as saying all tuples does not belongs to student where S is not true and (iv) is also not correct."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.061Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fc1",
      "questionId": 1057,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schemas :"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Branch_Schema = (branch_name, assets, city)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Customer_Schema = (cutstomer_name, street, city)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Deposit_Schema = (branch_name, account_number, customer_name, balance)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Borrow_Schema = (branch_name, loan_number, customer_name, amount)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is a correct way to write tuple relational calculus of the given English query?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Finds all customers who have balance more than 25,000?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t |∃t ∈ deposit (t(customer_name = s(customer_name)) V [amount]>25,000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t |t(customer_name) | t∈ deposit V t[amount]>25,000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t |∃t ∈ deposit (t(customer_name) ∧ s[amount]>25,000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{ t | ∃s ∈ Deposit ( t[customer_name] = s[customer_name] ∧ s[balance] > 25000 ) }"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (d) is correct answer"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False : ((customer_name)) V [amount]>25000 ) :- or(V) operator is not correct for given query."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False: t |t(customer_name) | t∈ deposit V t[amount]>25000} :- this is not a correct way to write TRC query."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False : {t |∃t ∈ deposit (t(customer_name) ∧ s[amount]>25000}:- this is also not a correct way to write TRC query."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "True: {t |∃t ∈ deposit (t(customer_name = s(customer_name)) ∧ [amount]>25000} this query given appropriate answer according to the question."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.229Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fc5",
      "questionId": 1058,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following query language is non-procedural language?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Domain relation calculus"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Tuple relation calculus"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Relational algebra"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both (i) and (ii)"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (d)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Both (a) and (b) true"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A Domain relational calculus is a non procedural query language which specifies to select the vales in a relation."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A tuple relational calculus is a non procedural query language which specifies to select the tuples in a relation."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A relational algebra is a procedural query language."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.326Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fc9",
      "questionId": 1059,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "consider the following relational schema:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Student (Roll-no, Student-name ,city , phone_no.)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Subject(Sub_id ,Sub_name)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Enrollment (Roll-no, Sub_id , department-id, percentage)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following query is equivalent to given query in English?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "“find the distinct names of all students who scored less than 50% in the course id 16A”."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Select distinct S.Student-name from Student as S, Enrollment as E where E.Roll-no = S.Roll-no. AND E.Sub_id=16A AND E.Precent < 50"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Π student-name (σ sub_id = 16A ^ percent < 50 (enrollment ⋈ student)"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{T| S € Student, E € enrollment (E.Roll-no = S.Roll-no. ^ E.Sub_id=16A ^ E.Precent < 50 ^ T.Student-name = S.Student.nmae)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{ | SR EP ( < Sr , SN > € Student ^ ( < Sr , 16A,Ep >€ Enrollment ^ Ep >= 50}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (a) ,(b) & (c)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "SQL query is correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "It is RA query that also correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "It is TRC query correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "It is DRC but in last step Ep>=50 is there which is wrong it should be Ep<50"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.389Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fcd",
      "questionId": 1060,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schema:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Suppliers(sid: integer, sname: string, address: string)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parts(pid: integer, pname: string, color: string)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Catalog(sid: integer, pid: integer, cost: real)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following query is equivalent to given query in English? "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Find the names of suppliers who supply some red part."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "πsname(πsid((πpidσcolor=’red’ Parts) ⋈ Catalog) ⋈ Suppliers)"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{T | ∃T 1 ∈ Suppliers(∃X ∈ Parts(X.color =’red’ V ∃Y ∈ Catalog (Y.pid = X.pid ∧ Y.sid = T 1.sid)) ∧ T.sname = T 1.sname)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{(Y )|(X, Y, Z) ∈ Suppliers ∧ ∃P, Q, R((P, Q, R) ∈ Parts ∧ R =’red’ ∧ ∃I, J, K((I, J, K) ∈ Catalog ∧ J = P ∧ I = X))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT S.sname FROM Suppliers S, Parts P, Catalog C WHERE P.color=’red’ OR C.pid=P.pid AND C.sid=S.sid"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          0,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (a)& (c) is correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "RA query is correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "TRC query is wrong because (X.color =’red’ V ∃Y ∈ Catalog) it should be like (X.color =’red’ ∧ ∃Y ∈ Catalog)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "DRC query is correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "SQL query is incorrect (Catalog C WHERE P.color=’red’ OR C.pid=P.pid AND C.sid=S.sid) Instead of OR there Should be AND."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.541Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fd1",
      "questionId": 1061,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schema:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Suppliers(sid: integer, sname: string, address: string)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parts(pid: integer, pname: string, color: string)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Catalog(sid: integer, pid: integer, cost: real)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the english query is correct for given query in TRC? (MCQ)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "{T | ∃T 1 ∈ Catalog (∀X ∈ Parts(∃T 2 ∈ Catalog (T 2.pid = X.pid ∧ T 2.sid = T 1.sid)) ∧ T.sid = T 1.sid)}."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the sids of suppliers who supply at least one part."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the sids of suppliers who supply every part."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the sids of suppliers who supply no part."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the sids of suppliers who supply at most one part."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (b) Find the sids of suppliers who supply every part."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(∀X ∈ Parts(∃T 2 ∈ Catalog (T 2.pid = X.pid ∧ T 2.sid = T 1.sid))"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In this query we can see that all the x which belongs to parts is compared with T2 which belongs to catalog pid."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "So, correct answer for this query is the sids of suppliers who supply every part."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The RA query for this TRC is : (πsid,pidCatalog)/(πpidP arts)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The SQL query for this TRC is :"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "SELECT C.sid FROM Catalog C WHERE NOT EXISTS (SELECT P.pid FROM Parts P WHERE NOT EXISTS (SELECT C1.sid FROM Catalog C1 WHERE C1.sid = C.sid AND C1.pid = P.pid))."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.648Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fd5",
      "questionId": 1062,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the following is the example of unsafe query?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | ∃u ∈EMP (t[EMPName] = u[EmpName] ∧ ∃v ∈DEPT (t[DeptId] ≠ DeptId]))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ ∃u ∈ R1(t[A] = u[A]) ∧ ¬∃s ∈ R2(t[A]=s[A])}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename |¬ (E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid)))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (d) is correct option"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "it is called UNSAFE. {E.ename |¬ (E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft ¬ (A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid)))} is UNSAFE! Technique to guarantee SAFENESS can be applied to transform a query."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.759Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fd9",
      "questionId": 1063,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following tuple relational calculus expression(s) is/are equivalent to P1 ∧ P2?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "(¬ (P1) ∨¬ (P2))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "¬ (¬ (P1) ∧ ¬ (P2))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "¬ (¬ (P1) ∨¬ (P2))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "(¬ (P1) ∧ ¬ (P2))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution (c) option is true"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "¬ (¬ (P1) ∨ ¬ (P2)): This expression is the negation of the logical OR of the negations of P1 and P2. Applying De Morgan’s law, we can simplify it to P1 ∧ P2. Therefore, this expression is equivalent to P1 ∧ P2."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.841Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad4355ee0b2d81f4fdd",
      "questionId": 1064,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following SQL query is correct for given DRC(domain relation calculus )?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "{(Eid1)|(Eid1,EN1,ES1)∈ Employess∧ ¬(∃Eid2,EN2,ES2((Eid2,EN2,ES2) ∈ Employess ∧ ES2 > ES1))}"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT E.eid FROM Employees E WHERE E.salary IN( Select MIN (E2.salary) FROM Employees E2 )"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT E.eid FROM Employees E WHERE E.salary not IN( Select MAX (E2.salary) FROM Employees E2 )"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT E.eid FROM Employees E WHERE E.salary = ( Select MAX (E2.salary) FROM Employees E2 )"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT E.eid FROM Employees E WHERE E.salary = ( Select MIN (E2.salary) FROM Employees E2 )"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution (c) option is correct"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The DRC query return the maximum salary of the employee so correct option is"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "SELECT E.eid FROM Employees E WHERE E.salary = ( Select MAX (E2.salary) FROM Employees E2 )"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:48.930Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f4fe1",
      "questionId": 1065,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following relations containing airline flight information: "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Flights(flno: integer, from: string, to: string, distance: integer, departs: time, arrives: time) Aircraft(aid: integer, aname: string, cruisingrange: integer) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Certified(eid: integer, aid: integer) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Employees(eid: integer, ename: string, salary: integer)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Find the names of pilots certified for some Boeing aircraft. "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the TRC (tuple relation calculus) expression is equivalent to above English query?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid V A.aname = ‘Boeing’ V E.eid = C.eid))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ V E.eid = C.eid))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid V A.aname = ‘Boeing’ ∧ E.eid = C.eid))}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution: (a) is correct option"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "True: {E.ename | E ∈ Employees ∧ ∃C ∈ Certified (∃A ∈ Aircraft(A.aid = C.aid ∧ A.aname = ‘Boeing’ ∧ E.eid = C.eid))} returns the names of pilots certified for some Boeing aircraft."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False : In this query OR apply between inner query , it can’t pick appropriate result because of the OR symbol."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.044Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f4feb",
      "questionId": 1066,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following relations containing airline flight information: "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Flights(flno: integer, from: string, to: string, distance: integer, departs: time, arrives: time) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aircraft(aid: integer, aname: string, cruisingrange: integer) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Certified(eid: integer, aid: integer) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Employees(eid: integer, ename: string, salary: integer) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the english query is correct for given query in TRC (Tuple relation calculus)? "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "{E1.eid | E1 ∈ Employees ∧ ∃E2 ∈ Employees(E2.salary > E1.salary ∧¬(∃E3 ∈ Employees(E3.salary > E2.salary)))}."
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The eids of employees who make the highest salary."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The eids of employees who make the second highest salary"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The eids of employees who make the second Lowest salary."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The eids of employees who make the lowest salary."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "solution : (ii) is correct option"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "{E1.eid | E1 ∈ Employees ∧ ∃E2 ∈ Employees(E2.salary > E1.salary ∧¬(∃E3 ∈ Employees(E3.salary > E2.salary)))} this query return The eids of employees who make the second highest salary."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In this query Inner most query returns the Highest salary but we apply negation here which is used to remove the highest salary and then middle query is pickup highest salary but it has not taken inner most result salary which is highest. Finally outer query produce 2nd highest salary employee."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.558Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f4ff2",
      "questionId": 1067,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statements correctly describes Tuple Relational Calculus (TRC)?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "TRC specifies the order of operations to retrieve data from a database."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "TRC uses logical formulas to describe the properties of the desired tuples."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "TRC uses a sequence of relational algebra operations to manipulate relations."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "TRC is used to define the physical structure of a database."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Tuple Relational Calculus specifies what information the result should contain without describing how to compute it, using logical formulas to express the properties of the tuples."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.663Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f4ffc",
      "questionId": 1068,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "In Tuple Relational Calculus, the formula {t | P(t)} denotes:"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A set of all tuples t such that predicate P(t) is true."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A specific tuple t that satisfies the predicate P(t)."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "The selection of a single attribute from a tuple t."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A sequence of tuples that satisfy the predicate P(t)."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In TRC, {t | P(t)} represents the set of all tuples t for which the condition P(t) holds true."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.747Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f5000",
      "questionId": 1069,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is an example of a tuple variable in Tuple Relational Calculus?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Employee"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "x.Age"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "x"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "SELECT * FROM Employee"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In TRC, x is a tuple variable that ranges over tuples in a relation."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.837Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c91ad5355ee0b2d81f5004",
      "questionId": 1070,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following Tuple Relational Calculus expressions correctly retrieves the names of employees with a salary greater than 5000?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | Employee(t) AND t.salary > 5000 AND ∃s (s.name = t.name)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | ∃s ∈ Employee(t) (s.salary > 5000 AND t.name = s.name)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | Employee(t) AND t.salary > 5000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | Employee(t) AND t.salary > 5000 AND t.name}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "This expression retrieves all tuples t from the Employee relation where t.salary > 5000."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T08:07:49.958Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e5355ee0b2d8911d76",
      "questionId": 1071,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Given the following relational schemas"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Student (studId, name, age, sex, deptNo, advisor)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Department (deptId, DName, hod, phoneNo)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following will be the TRC query to obtain the department names that do not have any girl students?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "#2"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{d.Dname | department(d) ∧ ~ ((∃(s)) student(s) ∧ s.sex ≠ ‘F’ ∧ s.deptNo = d.deptId)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{d.Dname | department(d) ∧ ((∀ (s)) student(s) ∧ s.sex = ‘F’ ∧ s.deptNo = d.deptId)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{d.Dname | department(d) ∧ ~ ((∃(s)) student(s) ∧ s.sex = ‘F’ ∧ s.deptNo = d.deptId)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "To display the department name in output, there should not exist at least one student row in student relation such that student department number is equal to the deptId of that department and student sex is female. So, C is the correct answer"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:45.251Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e5355ee0b2d8911d7a",
      "questionId": 1072,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Choose an expression in the tuple relational calculus that is equivalent to each of the following relational algebra:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ΠA(r)"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | ∃ q ∈ r (q[A] = t[A])}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ ∀q∈r(q[A]=t[A])}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ t[A]≠q[A]∧q∈r}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: The use of ∀ is incorrect because projection does not involve checking all tuples. Projection only selects the specific attribute values, so ∀ is not suitable."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "C: This expression is invalid because it includes tuples where t[A]≠q[A]. Projection should include tuples with the same value for attribute A, not exclude them."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:45.334Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e5355ee0b2d8911d80",
      "questionId": 1073,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let the following relation schemas be given: R = (A, B, C). Let relations r(R) be given. Select an equivalent Tuple Relational Calculus (TRC) expression for each of the given Relational Algebra (RA) operations:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "σB = 17 (r)"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ t ∈ r ∨ t[B]=17}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ t ∉ r ∧ t[B]=17}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t ∣ t ∈ r ∧ t[B]=17}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: The use of ∨ (OR) is incorrect because it would include all tuples in r, even if t[B]≠17, which does not match the condition."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: The condition t∉r contradicts the requirement that t must be in r, so it will not return the correct result."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:45.444Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911db5",
      "questionId": 1078,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider a relation Product(P_ID, P_Name, Price). Which of the following tuple relational calculus expressions retrieves all products whose price is less than 100?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{P ∣ P.Price>100∧P∈Product}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{P.P_ID,P.P_Name ∣ P.Price<100∧P∈Product}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{P.P_Name ∣ P∈Product∧P.Price<100}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{P.Price ∣ P∉Product∧P.P_ID<100}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: Incorrect, retrieves prices >100"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: Incorrect, retrieves only P_ID and P_Name"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "C: Correct, retrieves product names with Price<100"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "D: Incorrect, irrelevant logic with P∉Product"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.346Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911dba",
      "questionId": 1079,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following relational schema"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Students (Sno, Sname, age, sex)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "CourseInfo(courseNo, courseName, instructorName)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Enroll(Sno, courseNo, hours)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following queries is/are equivalent to this query in English?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "“Find the names of all students who enrolled in all courses instructed by ‘Sindhu’.”"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "I.{S.Sname/ Student(S) and ∀∁ ((CourseInfo (C) and ∁.instructorName = ‘Sindhu’)→ (∃e) (Enroll (e) and e. Sno = S.Sno ^ e.courseNo = c.courseNo))}"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "II.Select Sname FROM Students S WHERE EXISTS ((SELECT courseNo FROM CourseInfo WHERE InstructorName = ‘Sindhu’) EXCEPT (Select courseNo FROM Enroll e WHERE e. Sno = S.Sno));"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "II only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both I & II"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "I → This is a Tuple Relational Calculus (TRC) language expression. It is not a procedural language (i.e. it only tells “what to do”, not “how to do”). It just represents a declarative mathematical expression. Here we are displaying those student names such that they enrolled for all courses taught by instructor Name ‘Sindhu’. So, I is correct."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "II → This is incorrect because in the given query, we retrieve the names of the students who enrolled for at least one course taught by sindhu. Since, we need to find the names of the students who enrolled for all the courses taught by sindhu, NOT EXISTS clause will best fit the context instead of EXISTS."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Therefore, the answer is option (a)."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.442Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911dc0",
      "questionId": 1080,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let the following relation schemas be given: R = (A, B, C), S = (D, E, F) Let relations r(R) and s(S) be given. Choose an expression in the relational calculus that is equivalent to each of the following tuple relational algebra:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "{t | ∃ p ∈ r ∃ q ∈ s (t[A] = p[A] ∧ t[F] = q[F] ∧ p[C] = q[D]}"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "ΠA,F (σC ≠ D (r × s))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "ΠA,F​(σC=D​(rxs))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "ΠA,F​(σC=D​(r⋈s))"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: The condition C≠D is incorrect, as the TRC explicitly specifies C=D, which selects tuples where p[C]=q[D]"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "C: The use of r⋈s (natural join) is incorrect because it automatically matches all common attributes, which is not explicitly specified in the given TRC."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.551Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911dc7",
      "questionId": 1081,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let R = (A, B, C), and let r1 and r2 both be relations on schema R. Match RA operation with its equivalent TRC:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ΠA,B​(r1​) ⋈ ΠB,C​(r2​)"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{⟨a,b,c⟩ ∣ ∀p,q(⟨a,b,p⟩∈r1​∧⟨q,b,c⟩∈r2​)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{⟨a,b,c⟩ ∣ ∃p,q(⟨a,b,p⟩∉r1​∨⟨q,b,c⟩∉r2​)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{< a, b, c > | ∃ p, q (< a, b, p > ∈ r1 ∧ < q, b, c > ∈ r2)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A:  The use of ∀ (for all) is incorrect because the join requires specific tuples where b matches, not all possible tuples."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: The use of ∉ and ∨ (OR) is incorrect because it selects tuples that are not part of r1​ or r2​, which contradicts the join operation."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.640Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911dcf",
      "questionId": 1082,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the relational database"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "employee (person-name, street, city)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "works (person-name, company-name, salary)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "company (company-name, city)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is the correct statement for the given TRC?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TRC: {t | ∃ e ∈ employee ∃ w ∈ works ∃ c ∈ company (t[person-name] = e[person-name] ∧ e[person-name] = w[person-name] ∧ w[company-name] = c[company-name] ∧ e[city] = c[city])"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the names of all employees in this database"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the names of all employees in this database who live in the same city as the company for which they work"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Find the names of all companies and their employees"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: This does not satisfy the condition of matching the city of residence with the company's city.C: The TRC does not retrieve company names independently or without filtering based on matching cities."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.727Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e6355ee0b2d8911ddb",
      "questionId": 1083,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the relational database"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "employee (person-name, street, city)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "works (person-name, company-name, salary)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following is/are the correct TRC for the given problem statement?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "“Find the names and cities of residence of all employees who work for Knowledge Gate”"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": []
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | ∃ r ∈ employee ∃ s ∈ works ( t[person-name] = r[person-name] ∧ t[city] = r[city] ∨ r[person-name] = s[person-name] ∧ s[company-name] = “Knowledge Gate”)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{< p, c > | ∃ co, sa, st (< p, co, sa > ∈ works ∧ < p, st, c > ∈ employee ∧ co = “Knowledge Gate”)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{t | ∃ r ∈ employee ∃ s ∈ works ( t[person-name] = r[person-name] ∧ t[city] = r[city] ∧ r[person-name] = s[person-name] ∧ s[company-name] = “Knowledge Gate”)}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of these"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": []
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Option 2:  Combines tuples from works and employee where:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The person works for \"Knowledge Gate.\"Retrieves the name (ppp) and city (ccc).Correct as it matches the required query. Option 3: Matches tuples in employee and works based on person-name and ensures the company name is \"Knowledge Gate.\""
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Correctly retrieves the name and city of the employee."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Incorrect Options:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Option 1 uses ∨\\lor∨ instead of ∧\\land∧, leading to invalid results.Option 4 (\"None of these\") is invalid as 2 and 3 are correct."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:46.839Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c933e7355ee0b2d8911dee",
      "questionId": 1085,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Given a relation Employee(Emp_ID, Name, Salary, Dept), which Tuple Relational Calculus expression retrieves the IDs of employees whose salary is greater than 50,000?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.Emp_ID ∣ E∈Employee∧E.Salary>50000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.Salary ∣ E∈Employee∧E.Emp_ID>50000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E ∣ E∈Employee∧E.Emp_ID>50000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "{E.Emp_ID ∣ E∉Employee∧E.Salary<50000}"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A: Correct – Retrieves E.Emp_ID for employees where E.Salary>50000"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "B: Incorrect – Retrieves E.Salary instead of E.Emp_ID"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "C: Incorrect – Does not filter by salary >50000"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "D: Incorrect – Uses E∉Employee, which is invalid."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T09:54:47.031Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dda06ae24981702fca",
      "questionId": 1086,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following ensures the durability property of a set of transactions?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Recovery control system"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Concurrency control system"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Security management system"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Transaction control system"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 0,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "(a) Recovery control system"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The recovery system is responsible for the maintenance of durability. In addition, it also ensures atomicity."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:37.920Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dea06ae24981702fd3",
      "questionId": 1087,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the property is a part of ACID property?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Authentication"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Conflict serializable"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Isolation"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Deadlock freedom"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (iii) isolation"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In the context of transaction processing, the acronym ACID refers to the four key properties of a transaction: atomicity, consistency, isolation, and durability."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:38.085Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dea06ae24981702fd7",
      "questionId": 1088,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following two statements about database transaction schedules:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S1: Rigorous two-phase locking protocol generates cascade less schedules that are free from deadlock."
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S2: Timestamp-ordering concurrency control protocol with Thomas’ Write Rule can generate cascade less schedules that are free from deadlock."
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the above statements is/are TRUE?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S1 ONLY"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S2 ONLY"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both S1 and S2"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Neither S1 nor S2"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Answer: (d) Neither S1 nor S2"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False: Rigorous two-phase locking protocol generates cascade less schedules but not guarantee about deadlock free schedule."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False: Timestamp-ordering concurrency control protocol with Thomas’ Write Rule cannot generate cascade less schedules but it ensure deadlock freedom."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:38.178Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dea06ae24981702fe7",
      "questionId": 1091,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Let S be the following schedule of operations of three transactions T1, T2 and T3 in a relational database system: "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S: r1(X); r3(Y); r2(Y); r3(X); r1(Z);r2(Z); w3(Y); w1(X); w2(Z); w1(Z) "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the statements S1 and S2 below: "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S1: S is conflict-serializable. "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S2: If T2 commits before T1 finishes, then S is recoverable. "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the following choices is correct?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both P and Q are true"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "P is true and Q is false"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both P and Q are false"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "P is false and Q is true"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Identifying conflicts:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "r1(X) → w1(X) → No conflict (same transaction). "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "r3(Y) → w3(Y) → No conflict (same transaction)."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " r2(Y) → w3(Y) → Conflict: T2 reads Y before T3 writes Y → T2 → T3. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "r1(Z) → w1(Z) → No conflict (same transaction). "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "r2(Z) → w2(Z) → No conflict (same transaction). "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "w3(Y) → w1(X) → No conflict (different variables). "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "w1(X) → w2(Z) → No conflict (different variables). "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "w2(Z) → w1(Z) → Conflict: T2 writes Z before T1 writes Z → T2 → T1. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Precedence Graph: "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T2 → T3 (due to Y conflict) "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T2 → T1 (due to Z conflict)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T3 → T2 (due to X conflict)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The Graph contains a cycle --> T2 → T3 → T2 "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Therefore, S is not conflict-serializable, making S1 false."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For the schedule to be recoverable, no transaction should commit before reading uncommitted data."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T2 commits before T1 finishes:  "
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "T2 only writes Z. "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "T1 writes both X and Z. "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Since T1 writes after T2, T2 does not read uncommitted data from T1. "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Therefore, the schedule is recoverable if T2 commits before T1 finishes."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "        S2 is true.   "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Final Conclusion:  "
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "S1 is false → The schedule is not conflict-serializable. "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "S2 is true → The schedule is recoverable. "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "        Thus, the correct answer is:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "         D. P is false and Q is true"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:38.725Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dea06ae24981702feb",
      "questionId": 1092,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following scenarios may lead to an irrecoverable error in a database system?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A transaction writes a data item after it is read by an uncommitted transaction."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A transaction reads a data item after it is read by an uncommitted transaction."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A transaction reads a data item after it is written by a committed transaction."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A transaction reads a data item after it is written by an uncommitted transaction."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 3,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "A transaction reads a data item after it is written then we cant recover the errors in this situation by an uncommitted transaction."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:38.936Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981702ff1",
      "questionId": 1093,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schedules involving two transactions:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S1: r1(a),r1(b) r2(a) r2(b) w2(b) w1(a)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S2: r1(a), r2(a) r2(b) w2(b) r1(b) w1(a)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which one of the following statements is correct with respect to above schedules?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both are not conflict serializable."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both are conflict serializable."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S1 is not and S2 is conflict serializable."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "S1 is conflict serializable and S2 is not ."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For conflict serializability, check precedence graph of S1 and S2. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Cycle exists in S1. Hence S1 is  not conflict serializable."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Cycle doesn't not exist in S2. Hence S2 is conflict serializable."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.068Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981702ff5",
      "questionId": 1094,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What is the number of serial schedules possible containing 4 transactions?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 24,
          "max": 24,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Total number of serial schedules possible containing n transactions= All possible permutation of n = n!"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Hence , 4! = 24."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.171Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981702ff9",
      "questionId": 1095,
      "displayId": null,
      "type": "NAT",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What is the number of non-serial schedules possible containing 3 transactions of 2,3 and 4 operations respectively?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "range": {
          "min": 1254,
          "max": 1254,
          "precision": 2
        },
        "correctOptions": [],
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Total number of schedules = (n1+n2+n3)! / n1! * n2! * n3! (here, n1=2, n2=3, n3=4)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Total number of serial schedules possible containing n transactions "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "= All possible permutation of n = n! (here, n=3)"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Total number of non-serial schedules = total - serial"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "=(2+3+4)!/ (2! *3!* 4!)     -   3! "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "= 9! / (2*6*24)  - 6"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "=1260 - 6 = 1254"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.203Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981702ffd",
      "questionId": 1096,
      "displayId": null,
      "type": "NAT",
      "difficulty": "INTERMEDIATE",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schedule S consisting of three transactions in a database system:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S: r1(X), w1(Y), r2(Y), w2(Z), c1, w3(X), c2, c3 "
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "How many edges are there in precedence graph of the given schedule?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": []
      },
      "answer": {
        "correctOptions": [],
        "range": {
          "min": 2,
          "max": 2,
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Explanation:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "r1(X)"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 1 reads X."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "w1(Y)"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 1 writes Y."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "r2(Y)"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 2 reads Y → "
                      },
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "Conflict with w1(Y)"
                      },
                      {
                        "type": "text",
                        "text": " → "
                      },
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "T1 → T2"
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "w2(Z)"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 2 writes Z."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "c1"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 1 commits."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "w3(X)"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 3 writes X → "
                      },
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "Conflict with r1(X)"
                      },
                      {
                        "type": "text",
                        "text": " → "
                      },
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "T1 → T3"
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "c2"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 2 commits."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "c3"
                      },
                      {
                        "type": "text",
                        "text": " → Transaction 3 commits."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Precedence Graph:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "T1 → T2"
                      },
                      {
                        "type": "text",
                        "text": " (due to Y conflict)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "T1 → T3"
                      },
                      {
                        "type": "text",
                        "text": " (due to X conflict)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "Total edges in the precedence graph:"
              },
              {
                "type": "text",
                "text": " "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "bold"
                  }
                ],
                "text": "2"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.228Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981703001",
      "questionId": 1097,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following transactions with data items P,Q,R and S initialized to zero:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "T1: read (P);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If P = 0 then p: = 2p + 5;"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Write (P);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "T2: read (Q);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If Q = 0 then Q: = Q + 5;"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Write (Q);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "T3: read (R);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If R = 0 then R: = R + 10;"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Write (R);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "T4: read (S);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If S = 0 then S: = S + 1;"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Write (S);"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Any non-serial interleaving of T1, T2, T3 and T4 for concurrent execution leads to"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "An Irrecoverable serializable schedule"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A schedule that is not conflict serializable"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A conflict serializable schedule"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A deadlock present schedule"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T1 reads and writes P."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T2 reads and writes Q."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T3 reads and writes R."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T4 reads S and writes S."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "This schedule is conflict-serializable because there are no conflicting operations (read-write or write-write) between transactions"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.256Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae24981703005",
      "questionId": 1098,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statement is false?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Every cascade less schedule is recoverable."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Every strict schedule is conflict serializable"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "A conflict serializable schedule is always equivalent to one and only one single serial schedule."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "All conflict serializable schedules are view serializable, but the reverse need not be true."
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution: (b) and (c) are false"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "True: Every cascadeless schedule is also recoverable because in a cascadeless schedule, the commit operations occur in the same sequence as that of write and read operations of two transactions respectively."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False : Every serializable schedule is strict. But every strict schedule is not serializable. A Schedule is a serializable schedule if its outcome is equal to the outcome of its transactions executed serially."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "False: for a conflict serializable schedule, the linear ordering of trasections corresponds to topological sorting of the serialization graph. Since there can be multiple such ordering, multiple equivalent serial schedules may exist."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "True: All conflict serializable schedules are view serializable, but the reverse need not be true."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.332Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68c960dfa06ae2498170300d",
      "questionId": 1099,
      "displayId": null,
      "type": "MSQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exclusive locks of the transactions are released at the end of transaction to ensure"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Key value locking"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Recoverability"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Cascadelessness"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Deadlock freedom"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOptions": [
          1,
          2
        ],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Solution : (b) and (c) true"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Transaction holds an exclusive lock on data that prevents other transactions from accessing the data. This lock remains in place until the transaction holding the lock issues a commit or rollback. This method ensure the recoverability and cascadeless ness but it cannot say about deadlock."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-16T13:06:39.465Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68ca5182edc06fa5229490ae",
      "questionId": 1104,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following statements is/are true?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "I. Strict 2Pl ensures strict schedules"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "II. Basic 2PL allows cascading aborts"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Only I"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Only II"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both I & II"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Statement I:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Strict 2PL means we will unlock the exclusive locks on data items only after committing the transaction. It means the transaction writes or reads the data item only after the previous transaction which wrote it commits."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Therefore, strict 2PL ensures strict schedules. So, statement I is correct."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Statement II:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "In basic 2PL, there is no restriction on when to unlock items. If once one transaction unlocks the item and another transaction lock that item and is making changes, then if the previous transaction aborts then this transaction should also abort. "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "This leads to cascading aborts. So, statement II is correct."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph"
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-17T06:13:22.238Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68ca5182edc06fa5229490bb",
      "questionId": 1106,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "What are the potential problems when a DBMS executes multiple transactions concurrently."
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The dirty read "
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The durability"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The phantom read "
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The serializability"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph"
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "3 and 4 only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "1,2 and 4 only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "1 and 3 only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "2 and 4 only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Problems due to the concurrent execution of transactions/;"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The lost update problem"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The unrepeatable read problem"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The dirty read problem"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The phantom read problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph"
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-17T06:13:22.403Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68ca5182edc06fa5229490bf",
      "questionId": 1107,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which protocol is satisfied by following transaction:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LOCK – X(A)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LOCK – S(B)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "R(A)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "R(B)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "W(A)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "UNLOCK(A)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "COMMIT"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "UNLOCK(B)"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Strict 2PL"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Rigorous 2PL"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Conservative 2PL"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 2,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The given transaction follows conservative 2PL as before stating the transaction, we obtained all the locks that we require and then we released all the locks after we used. It does not follow strict 2PL, as in strict 2PL we release all exclusive locks after committing transaction. But here ‘A” which is exclusive lock is unlocked after we commit the transaction. As it does not follow strict 2PL, it does not follow rigorous 2PL also."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-17T06:13:22.477Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68ca5182edc06fa5229490c8",
      "questionId": 1109,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "How can we avoid cascading rollbacks?"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "I. Using strict two phase locking protocol"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "II. Using rigorous two phase protocol"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "III. Using basic two phase locking protocol"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I and II only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "II and III only"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "I, II and III"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "We can avoid cascading rollbacks in strict schedules. In these schedules, transactions can neither read nor write an item X until the last transaction that wrote X has committed (or aborted). We know that strict 2PL and rigorous 2PL ensures strict schedules. Since, in strict 2PL, the transaction does not release any of its exclusive (write) locks until after it commits or aborts, and in rigorous 2PL, the transaction does not release any of its exclusive (write) locks or share (read) locks until after it commits or aborts."
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-17T06:13:22.681Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    },
    {
      "id": "68ca5182edc06fa5229490d6",
      "questionId": 1111,
      "displayId": null,
      "type": "MCQ",
      "difficulty": "BEGINNER",
      "topology": {
        "subject": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "topic": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "subtopic": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "pyq": {
        "type": null,
        "year": null,
        "exam": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "branch": {
          "id": null,
          "name": null,
          "canonicalName": null
        },
        "paper": {
          "id": null,
          "name": null,
          "canonicalName": null
        }
      },
      "content": {
        "questionText": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider the following schedules involving three transactions:"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S₁: r₁(x), r₂(z), r₁(z), r₃(x), r₃(y), w₁(x), w₃(y), r₂(y), w₂(z), w₂(y)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "S₂: r₁(x), r₂(z), r₁(z), r₃(x), r₃(y), w₁(x), w₂(z), w₃(y), w₂(y)"
                }
              ]
            },
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Which of the following schedules is conflict serializable?"
                }
              ]
            }
          ]
        },
        "instructions": {
          "type": "doc",
          "content": [
            {
              "type": "paragraph"
            }
          ]
        },
        "options": [
          {
            "id": 0,
            "order": 0,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Only S₁"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 1,
            "order": 1,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Both S₁ and S₂"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 2,
            "order": 2,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "Only S₂"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          },
          {
            "id": 3,
            "order": 3,
            "text": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "None of the above"
                    }
                  ]
                }
              ]
            },
            "feedback": {
              "type": "doc",
              "content": [
                {
                  "type": "paragraph"
                }
              ]
            }
          }
        ]
      },
      "answer": {
        "correctOption": 1,
        "correctOptions": [],
        "range": {
          "precision": 2
        },
        "acceptedAnswers": [],
        "caseSensitive": false
      },
      "solution": {
        "type": "doc",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For S₁: Conflicts:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₃(x) before w₁(x) ⇒ T₃ → T₁"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₁(z) before w₂(z) ⇒ T₁ → T₂"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₃(y) before w₂(y) ⇒ T₃ → T₂"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Precedence Graph: "
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "T₃ → T₁ "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "T₁ → T₂ "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "T₃ → T₂ "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "✅ No cycle ⇒ S₁ is Conflict Serializable"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For S₂:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Conflicts:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₃(x) before w₁(x) ⇒ T₃ → T₁"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₁(z) before w₂(z) ⇒ T₁ → T₂"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "r₃(y) before w₂(y) ⇒ T₃ → T₂"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Precedence Graph:"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " T₃ → T₁"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": " T₁ → T₂ "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "T₃ → T₂ "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "✅ No cycle ⇒ S₂ is also Conflict Serializable"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Both S₁ and S₂ are conflict serializable "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Correct option: B. Both S₁ and S₂"
              }
            ]
          }
        ]
      },
      "metadata": {
        "status": "DRAFT",
        "hasImages": false,
        "createdAt": "2025-09-17T06:13:22.993Z",
        "updatedAt": "2025-09-19T06:00:54.152Z",
        "tags": []
      }
    }
  ]
}